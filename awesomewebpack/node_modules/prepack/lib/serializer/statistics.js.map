{"version":3,"sources":["../../src/serializer/statistics.js"],"names":["SerializerStatistics","constructor","getTime","getMemory","forcingGC","functions","delayedValues","initializedModules","acceleratedModules","delayedModules","totalModules","resetBeforePass","total","resolveInitializedModules","initializeMoreModules","optimizeReactComponentTreeRoots","checkThatFunctionsAreIndependent","deepTraversal","referenceCounts","serializePass","babelGenerate","objects","objectProperties","functionClones","lazyObjects","referentialized","valueIds","valuesInlined","generators","requireCalls","requireCallsReplaced","getSerializerStatistics","log","console","logSerializerPerformanceTrackers","title","note","format","undefined","logPerformanceTrackers"],"mappings":"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","file":"statistics.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport { RealmStatistics, PerformanceTracker } from \"../statistics.js\";\n\nexport class SerializerStatistics extends RealmStatistics {\n  constructor(getTime: void | (() => number), getMemory: void | (() => number), forcingGC: boolean = false) {\n    super(getTime, getMemory);\n    this.forcingGC = forcingGC;\n\n    this.functions = 0;\n    this.delayedValues = 0;\n    this.initializedModules = 0;\n    this.acceleratedModules = 0;\n    this.delayedModules = 0;\n    this.totalModules = 0;\n    this.resetBeforePass();\n\n    this.total = new PerformanceTracker(getTime, getMemory);\n    this.resolveInitializedModules = new PerformanceTracker(getTime, getMemory);\n    this.initializeMoreModules = new PerformanceTracker(getTime, getMemory);\n    this.optimizeReactComponentTreeRoots = new PerformanceTracker(getTime, getMemory);\n    this.checkThatFunctionsAreIndependent = new PerformanceTracker(getTime, getMemory);\n    this.deepTraversal = new PerformanceTracker(getTime, getMemory);\n    this.referenceCounts = new PerformanceTracker(getTime, getMemory);\n    this.serializePass = new PerformanceTracker(getTime, getMemory);\n    this.babelGenerate = new PerformanceTracker(getTime, getMemory);\n  }\n\n  resetBeforePass(): void {\n    this.objects = 0;\n    this.objectProperties = 0;\n    this.functionClones = 0;\n    this.lazyObjects = 0;\n    this.referentialized = 0;\n    this.valueIds = 0;\n    this.valuesInlined = 0;\n    this.generators = 0;\n    this.requireCalls = 0;\n    this.requireCallsReplaced = 0;\n  }\n\n  forcingGC: boolean;\n\n  objects: number;\n  objectProperties: number;\n  functions: number;\n  functionClones: number;\n  lazyObjects: number;\n  referentialized: number;\n  valueIds: number;\n  valuesInlined: number;\n  delayedValues: number;\n  initializedModules: number;\n  acceleratedModules: number;\n  delayedModules: number;\n  totalModules: number;\n  generators: number;\n  requireCalls: number;\n  requireCallsReplaced: number;\n\n  // legacy projection\n  getSerializerStatistics() {\n    return {\n      objects: this.objects,\n      objectProperties: this.objectProperties,\n      functions: this.functions,\n      functionClones: this.functionClones,\n      lazyObjects: this.lazyObjects,\n      referentialized: this.referentialized,\n      valueIds: this.valueIds,\n      valuesInlined: this.valuesInlined,\n      delayedValues: this.delayedValues,\n      initializedModules: this.initializedModules,\n      acceleratedModules: this.acceleratedModules,\n      delayedModules: this.delayedModules,\n      totalModules: this.totalModules,\n      generators: this.generators,\n      requireCalls: this.requireCalls,\n      requireCallsReplaced: this.requireCallsReplaced,\n    };\n  }\n\n  total: PerformanceTracker;\n  resolveInitializedModules: PerformanceTracker;\n  initializeMoreModules: PerformanceTracker;\n  optimizeReactComponentTreeRoots: PerformanceTracker;\n  checkThatFunctionsAreIndependent: PerformanceTracker;\n  deepTraversal: PerformanceTracker;\n  referenceCounts: PerformanceTracker;\n  serializePass: PerformanceTracker;\n  babelGenerate: PerformanceTracker;\n\n  log(): void {\n    super.log();\n    console.log(`=== serialization statistics`);\n    console.log(`${this.objects} objects with ${this.objectProperties} properties`);\n    console.log(\n      `${this.functions} functions plus ${this.functionClones} clones due to captured variables; ${\n        this.referentialized\n      } captured mutable variables`\n    );\n    console.log(`${this.lazyObjects} objects are lazy.`);\n    console.log(\n      `${this.valueIds} eager and ${this.delayedValues} delayed value ids generated, and ${\n        this.valuesInlined\n      } values inlined.`\n    );\n    console.log(\n      `${this.initializedModules} out of ${this.totalModules} modules initialized, with ${\n        this.acceleratedModules\n      } accelerated and ${this.delayedModules} delayed.`\n    );\n    console.log(`${this.requireCallsReplaced} of ${this.requireCalls} require calls inlined.`);\n    console.log(`${this.generators} generators`);\n  }\n\n  logSerializerPerformanceTrackers(title: string, note: void | string, format: PerformanceTracker => string): void {\n    console.log(`=== ${title}: ${format(this.total)} total`);\n    if (note !== undefined) console.log(`NOTE: ${note}`);\n    this.logPerformanceTrackers(format);\n    console.log(\n      `${format(this.resolveInitializedModules)} resolving initialized modules, ${format(\n        this.initializeMoreModules\n      )} initializing more modules, ${format(\n        this.optimizeReactComponentTreeRoots\n      )} optimizing react component tree roots, ${format(\n        this.checkThatFunctionsAreIndependent\n      )} evaluating functions to optimize`\n    );\n    console.log(\n      `${format(this.deepTraversal)} visiting residual heap, ${format(\n        this.referenceCounts\n      )} reference counting, ${format(this.serializePass)} generating AST, ${format(\n        this.babelGenerate\n      )} generating source code`\n    );\n  }\n}\n"]}