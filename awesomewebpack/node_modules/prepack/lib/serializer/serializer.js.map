{"version":3,"sources":["../../src/serializer/serializer.js"],"names":["t","Serializer","constructor","realm","serializerOptions","useAbstractInterpretation","generator","pathConditions","logger","internalDebug","modules","logModules","delayUnsupportedRequires","accelerateUnsupportedRequires","functions","moduleTracer","trace","loggingTracer","tracers","push","options","_execute","sources","sourceMaps","res","code","$GlobalEnv","executeSources","ast","realmPreludeGenerator","preludeGenerator","forbiddenNames","nameGenerator","node","isIdentifier","add","name","context","pushContext","logCompletion","popContext","diagnostic","location","handleError","processOutputEntries","output","tryQuery","$GlobalObject","intrinsics","undefined","_entries","length","declaredGlobals","clear","getOwnPropertyKeysArray","property","properties","get","value","descriptor","emitGlobalDeclaration","init","realmStatistics","statistics","result","total","measure","react","verbose","logInformation","environmentRecordIdAfterGlobalCode","nextId","hasErrors","resolveInitializedModules","checkThatFunctionsAreIndependent","reactStatistics","enabled","optimizeReactComponentTreeRoots","initializeMoreModules","heapGraph","additionalFunctionValuesAndEffects","getAdditionalFunctionValuesToEffects","referentializer","createNameGenerator","residualHeapVisitor","deepTraversal","visitRoots","residualHeapValueIdentifiers","values","keys","heapGraphFormat","heapRefCounter","heapGraphGenerator","getResult","generateResult","inlineExpressions","initPass1","referenceCounts","inspector","functionInstances","classMethodInstances","functionInfos","referencedDeclaredValues","additionalFunctionValueInfos","declarativeEnvironmentRecordsBindings","generatorDAG","conditionalFeasibility","additionalGeneratorRoots","serialize","initPass2","TargetSerializer","lazyObjectsRuntime","resetBeforePass","serializePass","stripFlow","generated","babelGenerate","map","logStatistics","log","logSerializerPerformanceTrackers","forcingGC","pf","time","memory","Math","round"],"mappings":"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","file":"serializer.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { EnvironmentRecord } from \"../environment.js\";\nimport { Realm, ExecutionContext } from \"../realm.js\";\nimport { CompilerDiagnostic, FatalError } from \"../errors.js\";\nimport type { SourceFile } from \"../types.js\";\nimport { AbruptCompletion } from \"../completions.js\";\nimport { Generator } from \"../utils/generator.js\";\nimport generate from \"babel-generator\";\nimport traverseFast from \"../utils/traverse-fast.js\";\nimport invariant from \"../invariant.js\";\nimport type { SerializerOptions } from \"../options.js\";\nimport { SerializerStatistics } from \"./statistics.js\";\nimport { type SerializedResult, ReactStatistics } from \"./types.js\";\nimport { Functions } from \"./functions.js\";\nimport { Logger } from \"../utils/logger.js\";\nimport { Modules } from \"../utils/modules.js\";\nimport { stripFlowTypeAnnotations } from \"../utils/flow.js\";\nimport { LoggingTracer } from \"./LoggingTracer.js\";\nimport { ResidualHeapVisitor } from \"./ResidualHeapVisitor.js\";\nimport { ResidualHeapSerializer } from \"./ResidualHeapSerializer.js\";\nimport { ResidualHeapValueIdentifiers } from \"./ResidualHeapValueIdentifiers.js\";\nimport { LazyObjectsSerializer } from \"./LazyObjectsSerializer.js\";\nimport * as t from \"babel-types\";\nimport { ResidualHeapRefCounter } from \"./ResidualHeapRefCounter\";\nimport { ResidualHeapGraphGenerator } from \"./ResidualHeapGraphGenerator\";\nimport { Referentializer } from \"./Referentializer.js\";\nimport { Get } from \"../methods/index.js\";\nimport { ObjectValue, Value } from \"../values/index.js\";\n\nexport class Serializer {\n  constructor(realm: Realm, serializerOptions: SerializerOptions = {}) {\n    invariant(realm.useAbstractInterpretation);\n    // Start tracking mutations\n    realm.generator = new Generator(realm, \"main\", realm.pathConditions);\n\n    this.realm = realm;\n    this.logger = new Logger(this.realm, !!serializerOptions.internalDebug);\n    this.modules = new Modules(\n      this.realm,\n      this.logger,\n      !!serializerOptions.logModules,\n      !!serializerOptions.delayUnsupportedRequires,\n      !!serializerOptions.accelerateUnsupportedRequires\n    );\n    this.functions = new Functions(this.realm, this.modules.moduleTracer);\n    if (serializerOptions.trace) {\n      let loggingTracer = new LoggingTracer(this.realm);\n      this.realm.tracers.push(loggingTracer);\n    }\n\n    this.options = serializerOptions;\n  }\n\n  realm: Realm;\n  functions: Functions;\n  logger: Logger;\n  modules: Modules;\n  options: SerializerOptions;\n\n  _execute(sources: Array<SourceFile>, sourceMaps?: boolean = false): { [string]: string } {\n    let realm = this.realm;\n    let [res, code] = realm.$GlobalEnv.executeSources(sources, \"script\", ast => {\n      let realmPreludeGenerator = realm.preludeGenerator;\n      invariant(realmPreludeGenerator);\n      let forbiddenNames = realmPreludeGenerator.nameGenerator.forbiddenNames;\n      traverseFast(ast, node => {\n        if (!t.isIdentifier(node)) return false;\n\n        forbiddenNames.add(((node: any): BabelNodeIdentifier).name);\n        return true;\n      });\n    });\n\n    if (res instanceof AbruptCompletion) {\n      let context = new ExecutionContext();\n      realm.pushContext(context);\n      try {\n        this.logger.logCompletion(res);\n      } finally {\n        realm.popContext(context);\n      }\n      let diagnostic = new CompilerDiagnostic(\"Global code may end abruptly\", res.location, \"PP0016\", \"FatalError\");\n      realm.handleError(diagnostic);\n      throw new FatalError();\n    }\n    return code;\n  }\n\n  // When global.__output is an object, then this function replaces the global generator\n  // with one that declares global variables corresponding to the key-value pairs in the __output object,\n  // effectively rewriting the roots for visiting/serialization.\n  processOutputEntries(): boolean {\n    let realm = this.realm;\n    let output = this.logger.tryQuery(() => Get(realm, realm.$GlobalObject, \"__output\"), realm.intrinsics.undefined);\n    if (!(output instanceof ObjectValue)) return false;\n    let generator = realm.generator;\n    let preludeGenerator = realm.preludeGenerator;\n    if (generator === undefined || preludeGenerator === undefined) return false;\n    generator._entries.length = 0;\n    preludeGenerator.declaredGlobals.clear();\n    for (let name of output.getOwnPropertyKeysArray()) {\n      let property = output.properties.get(name);\n      if (!property) continue;\n      let value = property.descriptor && property.descriptor.value;\n      if (!(value instanceof Value)) continue;\n      generator.emitGlobalDeclaration(name, value);\n    }\n    return true;\n  }\n\n  init(sources: Array<SourceFile>, sourceMaps?: boolean = false): void | SerializedResult {\n    let realmStatistics = this.realm.statistics;\n    invariant(realmStatistics instanceof SerializerStatistics, \"serialization requires SerializerStatistics\");\n    let statistics: SerializerStatistics = realmStatistics;\n\n    let result = statistics.total.measure(() => {\n      // Phase 1: Let's interpret.\n      if (this.realm.react.verbose) {\n        this.logger.logInformation(`Evaluating initialization path...`);\n      }\n\n      let code = this._execute(sources);\n      let environmentRecordIdAfterGlobalCode = EnvironmentRecord.nextId;\n\n      if (this.logger.hasErrors()) return undefined;\n\n      if (!this.processOutputEntries()) {\n        statistics.resolveInitializedModules.measure(() => this.modules.resolveInitializedModules());\n      }\n\n      statistics.checkThatFunctionsAreIndependent.measure(() =>\n        this.functions.checkThatFunctionsAreIndependent(environmentRecordIdAfterGlobalCode)\n      );\n\n      let reactStatistics;\n      if (this.realm.react.enabled) {\n        statistics.optimizeReactComponentTreeRoots.measure(() => {\n          reactStatistics = new ReactStatistics();\n          this.functions.optimizeReactComponentTreeRoots(reactStatistics, environmentRecordIdAfterGlobalCode);\n        });\n      }\n\n      if (this.options.initializeMoreModules) {\n        statistics.initializeMoreModules.measure(() => this.modules.initializeMoreModules());\n        if (this.logger.hasErrors()) return undefined;\n      }\n\n      let heapGraph;\n      let ast = (() => {\n        // We wrap the following in an anonymous function declaration to ensure\n        // that all local variables are locally scoped, and allocated memory cannot\n        // get released when this function returns.\n\n        let additionalFunctionValuesAndEffects = this.functions.getAdditionalFunctionValuesToEffects();\n\n        // Deep traversal of the heap to identify the necessary scope of residual functions\n        let preludeGenerator = this.realm.preludeGenerator;\n        invariant(preludeGenerator !== undefined);\n        let referentializer = new Referentializer(\n          this.realm,\n          this.options,\n          preludeGenerator.createNameGenerator(\"__scope_\"),\n          preludeGenerator.createNameGenerator(\"__get_scope_binding_\"),\n          preludeGenerator.createNameGenerator(\"__leaked_\")\n        );\n        if (this.realm.react.verbose) {\n          this.logger.logInformation(`Visiting evaluated nodes...`);\n        }\n        let residualHeapVisitor = new ResidualHeapVisitor(\n          this.realm,\n          this.logger,\n          this.modules,\n          additionalFunctionValuesAndEffects,\n          referentializer\n        );\n        statistics.deepTraversal.measure(() => residualHeapVisitor.visitRoots());\n        if (this.logger.hasErrors()) return undefined;\n\n        if (this.realm.react.verbose) {\n          this.logger.logInformation(`Serializing evaluated nodes...`);\n        }\n        const realmPreludeGenerator = this.realm.preludeGenerator;\n        invariant(realmPreludeGenerator);\n        const residualHeapValueIdentifiers = new ResidualHeapValueIdentifiers(\n          residualHeapVisitor.values.keys(),\n          realmPreludeGenerator\n        );\n\n        if (this.options.heapGraphFormat) {\n          const heapRefCounter = new ResidualHeapRefCounter(\n            this.realm,\n            this.logger,\n            this.modules,\n            additionalFunctionValuesAndEffects,\n            referentializer\n          );\n          heapRefCounter.visitRoots();\n\n          const heapGraphGenerator = new ResidualHeapGraphGenerator(\n            this.realm,\n            this.logger,\n            this.modules,\n            additionalFunctionValuesAndEffects,\n            residualHeapValueIdentifiers,\n            heapRefCounter.getResult(),\n            referentializer\n          );\n          heapGraphGenerator.visitRoots();\n          invariant(this.options.heapGraphFormat);\n          heapGraph = heapGraphGenerator.generateResult(this.options.heapGraphFormat);\n        }\n\n        // Phase 2: Let's serialize the heap and generate code.\n        // Serialize for the first time in order to gather reference counts\n\n        if (this.options.inlineExpressions) {\n          residualHeapValueIdentifiers.initPass1();\n          statistics.referenceCounts.measure(() => {\n            new ResidualHeapSerializer(\n              this.realm,\n              this.logger,\n              this.modules,\n              residualHeapValueIdentifiers,\n              residualHeapVisitor.inspector,\n              residualHeapVisitor.values,\n              residualHeapVisitor.functionInstances,\n              residualHeapVisitor.classMethodInstances,\n              residualHeapVisitor.functionInfos,\n              this.options,\n              residualHeapVisitor.referencedDeclaredValues,\n              additionalFunctionValuesAndEffects,\n              residualHeapVisitor.additionalFunctionValueInfos,\n              residualHeapVisitor.declarativeEnvironmentRecordsBindings,\n              referentializer,\n              residualHeapVisitor.generatorDAG,\n              residualHeapVisitor.conditionalFeasibility,\n              residualHeapVisitor.additionalGeneratorRoots\n            ).serialize();\n          });\n          if (this.logger.hasErrors()) return undefined;\n          residualHeapValueIdentifiers.initPass2();\n        }\n\n        // Serialize for a second time, using reference counts to minimize number of generated identifiers\n        const TargetSerializer =\n          this.options.lazyObjectsRuntime != null ? LazyObjectsSerializer : ResidualHeapSerializer;\n        statistics.resetBeforePass();\n        return statistics.serializePass.measure(() =>\n          new TargetSerializer(\n            this.realm,\n            this.logger,\n            this.modules,\n            residualHeapValueIdentifiers,\n            residualHeapVisitor.inspector,\n            residualHeapVisitor.values,\n            residualHeapVisitor.functionInstances,\n            residualHeapVisitor.classMethodInstances,\n            residualHeapVisitor.functionInfos,\n            this.options,\n            residualHeapVisitor.referencedDeclaredValues,\n            additionalFunctionValuesAndEffects,\n            residualHeapVisitor.additionalFunctionValueInfos,\n            residualHeapVisitor.declarativeEnvironmentRecordsBindings,\n            referentializer,\n            residualHeapVisitor.generatorDAG,\n            residualHeapVisitor.conditionalFeasibility,\n            residualHeapVisitor.additionalGeneratorRoots\n          ).serialize()\n        );\n      })();\n\n      invariant(ast !== undefined);\n      if (this.realm.stripFlow) {\n        stripFlowTypeAnnotations(ast);\n      }\n\n      // the signature for generate is not complete, hence the any\n      let generated = statistics.babelGenerate.measure(() => generate(ast, { sourceMaps: sourceMaps }, (code: any)));\n\n      invariant(!this.logger.hasErrors());\n      return {\n        code: generated.code,\n        map: generated.map,\n        statistics,\n        reactStatistics,\n        heapGraph,\n      };\n    });\n\n    if (this.options.logStatistics) {\n      statistics.log();\n      statistics.logSerializerPerformanceTrackers(\n        \"time statistics\",\n        statistics.forcingGC\n          ? \"Time statistics are skewed because of forced garbage collections; remove --expose-gc flag from node.js invocation to disable forced garbage collections.\"\n          : undefined,\n        pf => `${pf.time}ms`\n      );\n      statistics.logSerializerPerformanceTrackers(\n        \"memory statistics\",\n        statistics.forcingGC\n          ? undefined\n          : \"Memory statistics are unreliable because garbage collections could not be forced; pass --expose-gc to node.js to enable forced garbage collections.\",\n        pf => `${pf.memory > 0 ? \"+\" : \"\"}${Math.round(pf.memory / 1024 / 1024)}MB`\n      );\n    }\n\n    return result;\n  }\n}\n"]}