{"version":3,"sources":["../../src/partial-evaluators/ThrowStatement.js"],"names":["ast","strictCode","env","realm","argValue","argAst","io","partiallyEvaluateCompletionDeref","argument","c","undefined","loc","s","t","throwStatement"],"mappings":";;;;;;kBAkBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAK+C;AAC5D,MAAI,CAACC,QAAD,EAAWC,MAAX,EAAmBC,EAAnB,IAAyBJ,IAAIK,gCAAJ,CAAqCP,IAAIQ,QAAzC,EAAmDP,UAAnD,CAA7B;AACA,MAAIG,gCAAJ,EAA+B;AAC7B,QAAIK,IAAI,iCAAoBL,QAApB,EAA8BM,SAA9B,EAAyCV,IAAIW,GAA7C,CAAR;AACA,QAAIC,IAAIC,EAAEC,cAAF,CAAkBT,MAAlB,CAAR,CAF6B,CAEY;AACzC,WAAO,CAACI,CAAD,EAAIG,CAAJ,EAAON,EAAP,CAAP;AACD;AACD,SAAO,CAACF,QAAD,EAAWC,MAAX,EAAmBC,EAAnB,CAAP;AACD,C;;AAjBD;;AACA;;AACA;;IAAYO,C","file":"ThrowStatement.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNode, BabelNodeStatement, BabelNodeThrowStatement } from \"babel-types\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Realm } from \"../realm.js\";\nimport { Completion, ThrowCompletion } from \"../completions.js\";\nimport { Value } from \"../values/index.js\";\nimport * as t from \"babel-types\";\n\nexport default function(\n  ast: BabelNodeThrowStatement,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): [Completion | Value, BabelNode, Array<BabelNodeStatement>] {\n  let [argValue, argAst, io] = env.partiallyEvaluateCompletionDeref(ast.argument, strictCode);\n  if (argValue instanceof Value) {\n    let c = new ThrowCompletion(argValue, undefined, ast.loc);\n    let s = t.throwStatement((argAst: any)); // will be an expression because argValue is a Value\n    return [c, s, io];\n  }\n  return [argValue, argAst, io];\n}\n"]}