{"version":3,"sources":["../src/completions.js"],"names":["Completion","constructor","value","precedingEffects","location","target","effects","undefined","result","toDisplayString","name","NormalCompletion","SimpleNormalCompletion","AbruptCompletion","ThrowCompletion","nativeStack","Error","stack","realm","$Realm","isInPureScope","reportSideEffectCallback","ContinueCompletion","BreakCompletion","ReturnCompletion","ForkedAbruptCompletion","joinCondition","consequent","consequentEffects","alternate","alternateEffects","intrinsics","empty","updateConsequentKeepingCurrentEffects","newConsequent","e","generator","modifiedBindings","modifiedProperties","createdObjects","updateAlternateKeepingCurrentEffects","newAlternate","superString","slice","containsCompletion","CompletionType","containsBreakOrContinue","transferChildrenToPossiblyNormalCompletion","PossiblyNormalCompletion","savedPathConditions","savedEffects","getNormalCompletion"],"mappings":"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","file":"completions.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNodeSourceLocation } from \"babel-types\";\nimport invariant from \"./invariant.js\";\nimport { Effects, Realm } from \"./realm.js\";\nimport { AbstractValue, EmptyValue, Value } from \"./values/index.js\";\n\nexport class Completion {\n  constructor(value: Value, precedingEffects: void | Effects, location: ?BabelNodeSourceLocation, target?: ?string) {\n    this.value = value;\n    this.effects = precedingEffects;\n    if (precedingEffects !== undefined) precedingEffects.result = this;\n    this.target = target;\n    this.location = location;\n    invariant(this.constructor !== Completion, \"Completion is an abstract base class\");\n  }\n\n  value: Value;\n  effects: void | Effects;\n  target: ?string;\n  location: ?BabelNodeSourceLocation;\n\n  toDisplayString(): string {\n    return \"[\" + this.constructor.name + \" value \" + (this.value ? this.value.toDisplayString() : \"undefined\") + \"]\";\n  }\n}\n\n// Normal completions are returned just like spec completions\nexport class NormalCompletion extends Completion {\n  constructor(value: Value, precedingEffects: void | Effects, location: ?BabelNodeSourceLocation, target?: ?string) {\n    super(value, precedingEffects, location, target);\n    invariant(this.constructor !== NormalCompletion, \"NormalCompletion is an abstract base class\");\n  }\n}\n\n// SimpleNormalCompletions are returned just like spec completions. This class exists as the parallel for\n// PossiblyNormalCompletion to make comparisons easier.\nexport class SimpleNormalCompletion extends NormalCompletion {}\n\n// Abrupt completions are thrown as exeptions, to make it a easier\n// to quickly get to the matching high level construct.\nexport class AbruptCompletion extends Completion {\n  constructor(value: Value, precedingEffects: void | Effects, location: ?BabelNodeSourceLocation, target?: ?string) {\n    super(value, precedingEffects, location, target);\n    invariant(this.constructor !== AbruptCompletion, \"AbruptCompletion is an abstract base class\");\n  }\n}\n\nexport class ThrowCompletion extends AbruptCompletion {\n  constructor(\n    value: Value,\n    precedingEffects: void | Effects,\n    location: ?BabelNodeSourceLocation,\n    nativeStack?: ?string\n  ) {\n    super(value, precedingEffects, location);\n    this.nativeStack = nativeStack || new Error().stack;\n    let realm = value.$Realm;\n    if (realm.isInPureScope() && realm.reportSideEffectCallback !== undefined) {\n      realm.reportSideEffectCallback(\"EXCEPTION_THROWN\", undefined, location);\n    }\n  }\n\n  nativeStack: string;\n}\n\nexport class ContinueCompletion extends AbruptCompletion {\n  constructor(value: Value, precedingEffects: void | Effects, location: ?BabelNodeSourceLocation, target: ?string) {\n    super(value, precedingEffects, location, target || null);\n  }\n}\n\nexport class BreakCompletion extends AbruptCompletion {\n  constructor(value: Value, precedingEffects: void | Effects, location: ?BabelNodeSourceLocation, target: ?string) {\n    super(value, precedingEffects, location, target || null);\n  }\n}\n\nexport class ReturnCompletion extends AbruptCompletion {\n  constructor(value: Value, precedingEffects: void | Effects, location: ?BabelNodeSourceLocation) {\n    super(value, precedingEffects, location);\n  }\n}\n\nexport class ForkedAbruptCompletion extends AbruptCompletion {\n  constructor(\n    realm: Realm,\n    joinCondition: AbstractValue,\n    consequent: AbruptCompletion,\n    consequentEffects: Effects,\n    alternate: AbruptCompletion,\n    alternateEffects: Effects\n  ) {\n    super(realm.intrinsics.empty, undefined, consequent.location);\n    invariant(consequentEffects);\n    invariant(alternateEffects);\n    this.joinCondition = joinCondition;\n    consequent.effects = consequentEffects;\n    this.consequent = consequent;\n    alternate.effects = alternateEffects;\n    this.alternate = alternate;\n  }\n\n  joinCondition: AbstractValue;\n  consequent: AbruptCompletion;\n  alternate: AbruptCompletion;\n\n  // For convenience, this.consequent.effects should always be defined, but accessing it directly requires\n  // verifying that with an invariant.\n  get consequentEffects(): Effects {\n    invariant(this.consequent.effects);\n    return this.consequent.effects;\n  }\n\n  get alternateEffects(): Effects {\n    invariant(this.alternate.effects);\n    return this.alternate.effects;\n  }\n\n  updateConsequentKeepingCurrentEffects(newConsequent: AbruptCompletion): AbruptCompletion {\n    let e = this.consequent.effects;\n    invariant(e);\n    newConsequent.effects = new Effects(\n      newConsequent,\n      e.generator,\n      e.modifiedBindings,\n      e.modifiedProperties,\n      e.createdObjects\n    );\n    this.consequent = newConsequent;\n    return this;\n  }\n\n  updateAlternateKeepingCurrentEffects(newAlternate: AbruptCompletion): AbruptCompletion {\n    let e = this.alternate.effects;\n    invariant(e);\n    newAlternate.effects = new Effects(\n      newAlternate,\n      e.generator,\n      e.modifiedBindings,\n      e.modifiedProperties,\n      e.createdObjects\n    );\n    this.alternate = newAlternate;\n    return this;\n  }\n\n  toDisplayString(): string {\n    let superString = super.toDisplayString().slice(0, -1);\n    return (\n      superString + \" c: [\" + this.consequent.toDisplayString() + \"] a: [\" + this.alternate.toDisplayString() + \"]]\"\n    );\n  }\n\n  containsCompletion(CompletionType: typeof Completion): boolean {\n    if (this.consequent instanceof CompletionType) return true;\n    if (this.alternate instanceof CompletionType) return true;\n    if (this.consequent instanceof ForkedAbruptCompletion) {\n      if (this.consequent.containsCompletion(CompletionType)) return true;\n    }\n    if (this.alternate instanceof ForkedAbruptCompletion) {\n      if (this.alternate.containsCompletion(CompletionType)) return true;\n    }\n    return false;\n  }\n\n  containsBreakOrContinue(): boolean {\n    if (this.consequent instanceof BreakCompletion || this.consequent instanceof ContinueCompletion) return true;\n    if (this.alternate instanceof BreakCompletion || this.alternate instanceof ContinueCompletion) return true;\n    if (this.consequent instanceof ForkedAbruptCompletion) {\n      if (this.consequent.containsBreakOrContinue()) return true;\n    }\n    if (this.alternate instanceof ForkedAbruptCompletion) {\n      if (this.alternate.containsBreakOrContinue()) return true;\n    }\n    return false;\n  }\n\n  transferChildrenToPossiblyNormalCompletion(): PossiblyNormalCompletion {\n    invariant(this.consequent.value instanceof EmptyValue || this.alternate.value instanceof EmptyValue);\n    return new PossiblyNormalCompletion(\n      this.value.$Realm.intrinsics.empty,\n      this.joinCondition,\n      this.consequent,\n      this.consequentEffects,\n      this.alternate,\n      this.alternateEffects,\n      []\n    );\n  }\n}\n\n// Possibly normal completions have to be treated like normal completions\n// and are thus never thrown. At the end of a try block or loop body, however,\n// action must be taken to deal with the possibly abrupt case of the completion.\nexport class PossiblyNormalCompletion extends NormalCompletion {\n  constructor(\n    value: Value,\n    joinCondition: AbstractValue,\n    consequent: Completion,\n    consequentEffects: Effects,\n    alternate: Completion,\n    alternateEffects: Effects,\n    savedPathConditions: Array<AbstractValue>,\n    savedEffects: void | Effects = undefined\n  ) {\n    invariant(consequent === consequentEffects.result);\n    invariant(alternate === alternateEffects.result);\n    invariant(consequent instanceof NormalCompletion || alternate instanceof NormalCompletion);\n    super(value, undefined, consequent.location);\n    this.joinCondition = joinCondition;\n    consequent.effects = consequentEffects;\n    alternate.effects = alternateEffects;\n    this.consequent = consequent;\n    this.alternate = alternate;\n    this.savedEffects = savedEffects;\n    this.savedPathConditions = savedPathConditions;\n  }\n\n  joinCondition: AbstractValue;\n  consequent: Completion;\n  alternate: Completion;\n  savedEffects: void | Effects;\n  // The path conditions that applied at the time of the oldest fork that caused this completion to arise.\n  savedPathConditions: Array<AbstractValue>;\n\n  // For convenience, this.consequent.effects should always be defined, but accessing it directly requires\n  // verifying that with an invariant.\n  get consequentEffects(): Effects {\n    invariant(this.consequent.effects);\n    return this.consequent.effects;\n  }\n\n  get alternateEffects(): Effects {\n    invariant(this.alternate.effects);\n    return this.alternate.effects;\n  }\n\n  updateConsequentKeepingCurrentEffects(newConsequent: Completion): PossiblyNormalCompletion {\n    if (newConsequent instanceof NormalCompletion) this.value = newConsequent.value;\n    let effects = this.consequentEffects;\n    newConsequent.effects = effects;\n    newConsequent.effects.result = newConsequent;\n    this.consequent = newConsequent;\n    return this;\n  }\n\n  updateAlternateKeepingCurrentEffects(newAlternate: Completion): PossiblyNormalCompletion {\n    if (newAlternate instanceof NormalCompletion) this.value = newAlternate.value;\n    let effects = this.alternateEffects;\n    newAlternate.effects = effects;\n    newAlternate.effects.result = newAlternate;\n    this.alternate = newAlternate;\n    return this;\n  }\n\n  toDisplayString(): string {\n    let superString = super.toDisplayString().slice(0, -1);\n    return (\n      superString + \" c: [\" + this.consequent.toDisplayString() + \"] a: [\" + this.alternate.toDisplayString() + \"]]\"\n    );\n  }\n\n  getNormalCompletion(): SimpleNormalCompletion {\n    let result;\n    if (this.alternate instanceof SimpleNormalCompletion) {\n      result = this.alternate;\n    } else if (this.consequent instanceof SimpleNormalCompletion) {\n      result = this.consequent;\n    } else {\n      if (this.alternate instanceof PossiblyNormalCompletion) {\n        result = this.alternate.getNormalCompletion();\n      } else {\n        invariant(this.consequent instanceof PossiblyNormalCompletion);\n        result = this.consequent.getNormalCompletion();\n      }\n    }\n    invariant(result.value === this.value);\n    return result;\n  }\n\n  containsCompletion(CompletionType: typeof Completion): boolean {\n    if (this.consequent instanceof CompletionType) return true;\n    if (this.alternate instanceof CompletionType) return true;\n    if (this.consequent instanceof ForkedAbruptCompletion || this.consequent instanceof PossiblyNormalCompletion) {\n      if (this.consequent.containsCompletion(CompletionType)) return true;\n    }\n    if (this.alternate instanceof ForkedAbruptCompletion || this.alternate instanceof PossiblyNormalCompletion) {\n      if (this.alternate.containsCompletion(CompletionType)) return true;\n    }\n    return false;\n  }\n\n  containsBreakOrContinue(): boolean {\n    if (this.consequent instanceof BreakCompletion || this.consequent instanceof ContinueCompletion) return true;\n    if (this.alternate instanceof BreakCompletion || this.alternate instanceof ContinueCompletion) return true;\n    if (this.consequent instanceof ForkedAbruptCompletion || this.consequent instanceof PossiblyNormalCompletion) {\n      if (this.consequent.containsBreakOrContinue()) return true;\n    }\n    if (this.alternate instanceof ForkedAbruptCompletion || this.alternate instanceof PossiblyNormalCompletion) {\n      if (this.alternate.containsBreakOrContinue()) return true;\n    }\n    return false;\n  }\n}\n"]}