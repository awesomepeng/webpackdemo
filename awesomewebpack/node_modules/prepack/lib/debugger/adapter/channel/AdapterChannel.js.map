{"version":3,"sources":["../../../../src/debugger/adapter/channel/AdapterChannel.js"],"names":["AdapterChannel","constructor","inFilePath","outFilePath","_ioWrapper","_marshaller","_queue","_pendingRequestCallbacks","Map","_eventEmitter","_handleFileReadError","err","console","error","process","exit","_processPrepackMessage","message","dbgResponse","unmarshallResponse","result","kind","emit","BREAKPOINT_ADD_ACKNOWLEDGE","id","STOPPED_RESPONSE","STEPINTO_RESPONSE","_prepackWaiting","_processRequestCallback","trySendNextRequest","isEmpty","request","dequeue","listenOnFile","bind","writeOut","_addRequestCallback","requestID","callback","has","set","response","get","undefined","delete","registerChannelEvent","event","listener","addListener","launch","args","sendDebuggerStart","prepackCommand","sourceFiles","concat","prepackArguments","debugOutFilePath","debugInFilePath","runtime","prepackRuntime","length","_prepackProcess","spawn","on","kill","clean","stdout","outputCallback","exitCallback","run","enqueue","marshallContinueRequest","setBreakpoints","breakpoints","marshallSetBreakpointsRequest","getStackFrames","marshallStackFramesRequest","getScopes","frameId","marshallScopesRequest","getVariables","variablesReference","marshallVariablesRequest","stepInto","marshallStepIntoRequest","stepOver","marshallStepOverRequest","stepOut","marshallStepOutRequest","evaluate","expression","marshallEvaluateRequest","contents","writeOutSync","marshallDebuggerStart","messageProcessor","readIn","clearInFile","clearOutFile"],"mappings":"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","file":"AdapterChannel.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\nimport { FileIOWrapper } from \"./../../common/channel/FileIOWrapper.js\";\nimport { MessageMarshaller } from \"./../../common/channel/MessageMarshaller.js\";\nimport Queue from \"queue-fifo\";\nimport EventEmitter from \"events\";\nimport invariant from \"./../../common/invariant.js\";\nimport { DebugMessage } from \"./../../common/channel/DebugMessage.js\";\nimport child_process from \"child_process\";\nimport type { Breakpoint, DebuggerResponse, PrepackLaunchArguments } from \"./../../common/types.js\";\n\n//Channel used by the debug adapter to communicate with Prepack\nexport class AdapterChannel {\n  constructor(inFilePath: string, outFilePath: string) {\n    this._ioWrapper = new FileIOWrapper(true, inFilePath, outFilePath);\n    this._marshaller = new MessageMarshaller();\n    this._queue = new Queue();\n    this._pendingRequestCallbacks = new Map();\n    this._eventEmitter = new EventEmitter();\n  }\n  _ioWrapper: FileIOWrapper;\n  _marshaller: MessageMarshaller;\n  _queue: Queue;\n  _pendingRequestCallbacks: Map<number, (DebuggerResponse) => void>;\n  _prepackWaiting: boolean;\n  _eventEmitter: EventEmitter;\n  _prepackProcess: child_process.ChildProcess;\n\n  // Error handler for errors in files from the adapter channel\n  _handleFileReadError(err: ?ErrnoError): void {\n    console.error(err);\n    process.exit(1);\n  }\n\n  _processPrepackMessage(message: string): void {\n    let dbgResponse = this._marshaller.unmarshallResponse(message);\n    if (dbgResponse.result.kind === \"breakpoint-add\") {\n      this._eventEmitter.emit(DebugMessage.BREAKPOINT_ADD_ACKNOWLEDGE, dbgResponse.id, dbgResponse);\n    } else if (dbgResponse.result.kind === \"stopped\") {\n      this._eventEmitter.emit(DebugMessage.STOPPED_RESPONSE, dbgResponse);\n    } else if (dbgResponse.result.kind === \"stepInto\") {\n      this._eventEmitter.emit(DebugMessage.STEPINTO_RESPONSE, dbgResponse);\n    }\n    this._prepackWaiting = true;\n    this._processRequestCallback(dbgResponse);\n    this.trySendNextRequest();\n  }\n\n  // Check to see if the next request to Prepack can be sent and send it if so\n  trySendNextRequest(): boolean {\n    // check to see if Prepack is ready to accept another request\n    if (!this._prepackWaiting) return false;\n    // check that there is a message to send\n    if (this._queue.isEmpty()) return false;\n    let request = this._queue.dequeue();\n    this.listenOnFile(this._processPrepackMessage.bind(this));\n    this.writeOut(request);\n    this._prepackWaiting = false;\n    return true;\n  }\n\n  _addRequestCallback(requestID: number, callback: DebuggerResponse => void): void {\n    invariant(!this._pendingRequestCallbacks.has(requestID), \"Request ID already exists in pending requests\");\n    this._pendingRequestCallbacks.set(requestID, callback);\n  }\n\n  _processRequestCallback(response: DebuggerResponse): void {\n    let callback = this._pendingRequestCallbacks.get(response.id);\n    invariant(callback !== undefined, \"Request ID does not exist in pending requests: \" + response.id);\n    callback(response);\n    this._pendingRequestCallbacks.delete(response.id);\n  }\n\n  registerChannelEvent(event: string, listener: (response: DebuggerResponse) => void): void {\n    this._eventEmitter.addListener(event, listener);\n  }\n\n  launch(requestID: number, args: PrepackLaunchArguments, callback: DebuggerResponse => void): void {\n    this.sendDebuggerStart(requestID);\n    this.listenOnFile(this._processPrepackMessage.bind(this));\n    let prepackCommand = args.sourceFiles.concat(args.prepackArguments);\n    // Note: here the input file for the adapter is the output file for Prepack, and vice versa.\n    prepackCommand = prepackCommand.concat([\n      \"--debugInFilePath\",\n      args.debugOutFilePath,\n      \"--debugOutFilePath\",\n      args.debugInFilePath,\n    ]);\n\n    let runtime = \"prepack\";\n    if (args.prepackRuntime.length > 0) {\n      // user specified a Prepack path\n      runtime = \"node\";\n      // Increase node's memory allowance so Prepack can handle large inputs\n      prepackCommand = [\"--max_old_space_size=8192\", \"--stack_size=10000\"]\n        .concat([args.prepackRuntime])\n        .concat(prepackCommand);\n    }\n    this._prepackProcess = child_process.spawn(runtime, prepackCommand);\n\n    process.on(\"exit\", () => {\n      this._prepackProcess.kill();\n      this.clean();\n      process.exit();\n    });\n\n    process.on(\"SIGINT\", () => {\n      this._prepackProcess.kill();\n      process.exit();\n    });\n\n    this._prepackProcess.stdout.on(\"data\", args.outputCallback);\n\n    this._prepackProcess.on(\"exit\", args.exitCallback);\n    this._addRequestCallback(requestID, callback);\n  }\n\n  run(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallContinueRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  setBreakpoints(requestID: number, breakpoints: Array<Breakpoint>, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallSetBreakpointsRequest(requestID, breakpoints));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getStackFrames(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallStackFramesRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getScopes(requestID: number, frameId: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallScopesRequest(requestID, frameId));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getVariables(requestID: number, variablesReference: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallVariablesRequest(requestID, variablesReference));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  stepInto(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallStepIntoRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  stepOver(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallStepOverRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  stepOut(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallStepOutRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  evaluate(requestID: number, frameId: void | number, expression: string, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallEvaluateRequest(requestID, frameId, expression));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  writeOut(contents: string): void {\n    this._ioWrapper.writeOutSync(contents);\n  }\n\n  sendDebuggerStart(requestID: number): void {\n    this.writeOut(this._marshaller.marshallDebuggerStart(requestID));\n  }\n\n  listenOnFile(messageProcessor: (message: string) => void): void {\n    this._ioWrapper.readIn(this._handleFileReadError.bind(this), messageProcessor);\n  }\n\n  clean(): void {\n    this._ioWrapper.clearInFile();\n    this._ioWrapper.clearOutFile();\n  }\n}\n"]}