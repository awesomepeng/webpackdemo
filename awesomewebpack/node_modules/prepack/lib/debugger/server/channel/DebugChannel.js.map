{"version":3,"sources":["../../../../src/debugger/server/channel/DebugChannel.js"],"names":["DebugChannel","constructor","ioWrapper","_requestReceived","_ioWrapper","_marshaller","debuggerIsAttached","message","readInSyncOnce","parts","split","requestID","parseInt","isNaN","command","DEBUGGER_ATTACHED","clearInFile","writeOut","PREPACK_READY_RESPONSE","readIn","readInSync","unmarshallRequest","contents","writeOutSync","sendBreakpointsAcknowledge","messageType","args","marshallBreakpointAcknowledge","breakpoints","sendStoppedResponse","reason","filePath","line","column","marshallStoppedResponse","sendStackframeResponse","stackframes","marshallStackFramesResponse","sendScopesResponse","scopes","marshallScopesResponse","sendVariablesResponse","variables","marshallVariablesResponse","sendEvaluateResponse","evalResult","marshallEvaluateResponse","shutdown","clearOutFile"],"mappings":";;;;;;;AAUA;;;;AACA;;AACA;;AACA;;;;AAWA;AAxBA;;;;;;;;;AASA;AAgBO,MAAMA,YAAN,CAAmB;AACxBC,cAAYC,SAAZ,EAAsC;AACpC,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,UAAL,GAAkBF,SAAlB;AACA,SAAKG,WAAL,GAAmB,0CAAnB;AACD;;AAMD;;;AAGAC,uBAA8B;AAC5B,QAAIC,UAAU,KAAKH,UAAL,CAAgBI,cAAhB,EAAd;AACA,QAAID,YAAY,IAAhB,EAAsB,OAAO,KAAP;AACtB,QAAIE,QAAQF,QAAQG,KAAR,CAAc,GAAd,CAAZ;AACA,QAAIC,YAAYC,SAASH,MAAM,CAAN,CAAT,EAAmB,EAAnB,CAAhB;AACA,6BAAU,CAACI,MAAMF,SAAN,CAAX,EAA6B,6BAA7B;AACA,QAAIG,UAAUL,MAAM,CAAN,CAAd;AACA,QAAIK,YAAY,2BAAaC,iBAA7B,EAAgD;AAC9C,WAAKZ,gBAAL,GAAwB,IAAxB;AACA,WAAKC,UAAL,CAAgBY,WAAhB;AACA,WAAKC,QAAL,CAAe,GAAEN,SAAU,IAAG,2BAAaO,sBAAuB,EAAlE;AACA,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD;;AAED;;;;AAIAC,WAA0B;AACxB,QAAIZ,UAAU,KAAKH,UAAL,CAAgBgB,UAAhB,EAAd;AACA,SAAKjB,gBAAL,GAAwB,IAAxB;AACA,WAAO,KAAKE,WAAL,CAAiBgB,iBAAjB,CAAmCd,OAAnC,CAAP;AACD;;AAED;AACAU,WAASK,QAAT,EAAiC;AAC/B;AACA,6BAAU,KAAKnB,gBAAf,EAAiC,sDAAsDmB,QAAvF;AACA,SAAKlB,UAAL,CAAgBmB,YAAhB,CAA6BD,QAA7B;AACA,SAAKnB,gBAAL,GAAwB,KAAxB;AACD;;AAEDqB,6BAA2BC,WAA3B,EAAgDd,SAAhD,EAAmEe,IAAnE,EAAqG;AACnG,SAAKT,QAAL,CAAc,KAAKZ,WAAL,CAAiBsB,6BAAjB,CAA+ChB,SAA/C,EAA0Dc,WAA1D,EAAuEC,KAAKE,WAA5E,CAAd;AACD;;AAEDC,sBAAoBC,MAApB,EAA2CC,QAA3C,EAA6DC,IAA7D,EAA2EC,MAA3E,EAA2F1B,OAA3F,EAAmH;AACjH,SAAKU,QAAL,CAAc,KAAKZ,WAAL,CAAiB6B,uBAAjB,CAAyCJ,MAAzC,EAAiDC,QAAjD,EAA2DC,IAA3D,EAAiEC,MAAjE,EAAyE1B,OAAzE,CAAd;AACD;;AAED4B,yBAAuBxB,SAAvB,EAA0CyB,WAA1C,EAAgF;AAC9E,SAAKnB,QAAL,CAAc,KAAKZ,WAAL,CAAiBgC,2BAAjB,CAA6C1B,SAA7C,EAAwDyB,WAAxD,CAAd;AACD;;AAEDE,qBAAmB3B,SAAnB,EAAsC4B,MAAtC,EAAkE;AAChE,SAAKtB,QAAL,CAAc,KAAKZ,WAAL,CAAiBmC,sBAAjB,CAAwC7B,SAAxC,EAAmD4B,MAAnD,CAAd;AACD;;AAEDE,wBAAsB9B,SAAtB,EAAyC+B,SAAzC,EAA2E;AACzE,SAAKzB,QAAL,CAAc,KAAKZ,WAAL,CAAiBsC,yBAAjB,CAA2ChC,SAA3C,EAAsD+B,SAAtD,CAAd;AACD;;AAEDE,uBAAqBjC,SAArB,EAAwCkC,UAAxC,EAA0E;AACxE,SAAK5B,QAAL,CAAc,KAAKZ,WAAL,CAAiByC,wBAAjB,CAA0CnC,SAA1C,EAAqDkC,UAArD,CAAd;AACD;;AAEDE,aAAiB;AACf,SAAK3C,UAAL,CAAgBY,WAAhB;AACA,SAAKZ,UAAL,CAAgB4C,YAAhB;AACD;AA3EuB;QAAbhD,Y,GAAAA,Y","file":"DebugChannel.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\nimport invariant from \"./../../common/invariant.js\";\nimport { FileIOWrapper } from \"./../../common/channel/FileIOWrapper.js\";\nimport { DebugMessage } from \"./../../common/channel/DebugMessage.js\";\nimport { MessageMarshaller } from \"./../../common/channel/MessageMarshaller.js\";\nimport type {\n  DebuggerRequest,\n  BreakpointsArguments,\n  Stackframe,\n  Scope,\n  Variable,\n  StoppedReason,\n  EvaluateResult,\n} from \"./../../common/types.js\";\n\n//Channel used by the DebugServer in Prepack to communicate with the debug adapter\nexport class DebugChannel {\n  constructor(ioWrapper: FileIOWrapper) {\n    this._requestReceived = false;\n    this._ioWrapper = ioWrapper;\n    this._marshaller = new MessageMarshaller();\n  }\n\n  _requestReceived: boolean;\n  _ioWrapper: FileIOWrapper;\n  _marshaller: MessageMarshaller;\n\n  /*\n  /* Only called in the beginning to check if a debugger is attached\n  */\n  debuggerIsAttached(): boolean {\n    let message = this._ioWrapper.readInSyncOnce();\n    if (message === null) return false;\n    let parts = message.split(\" \");\n    let requestID = parseInt(parts[0], 10);\n    invariant(!isNaN(requestID), \"Request ID must be a number\");\n    let command = parts[1];\n    if (command === DebugMessage.DEBUGGER_ATTACHED) {\n      this._requestReceived = true;\n      this._ioWrapper.clearInFile();\n      this.writeOut(`${requestID} ${DebugMessage.PREPACK_READY_RESPONSE}`);\n      return true;\n    }\n    return false;\n  }\n\n  /* Reads in a request from the debug adapter\n  /* The caller is responsible for sending a response with the appropriate\n  /* contents at the right time.\n  */\n  readIn(): DebuggerRequest {\n    let message = this._ioWrapper.readInSync();\n    this._requestReceived = true;\n    return this._marshaller.unmarshallRequest(message);\n  }\n\n  // Write out a response to the debug adapter\n  writeOut(contents: string): void {\n    //Prepack only writes back to the debug adapter in response to a request\n    invariant(this._requestReceived, \"Prepack writing message without being requested: \" + contents);\n    this._ioWrapper.writeOutSync(contents);\n    this._requestReceived = false;\n  }\n\n  sendBreakpointsAcknowledge(messageType: string, requestID: number, args: BreakpointsArguments): void {\n    this.writeOut(this._marshaller.marshallBreakpointAcknowledge(requestID, messageType, args.breakpoints));\n  }\n\n  sendStoppedResponse(reason: StoppedReason, filePath: string, line: number, column: number, message?: string): void {\n    this.writeOut(this._marshaller.marshallStoppedResponse(reason, filePath, line, column, message));\n  }\n\n  sendStackframeResponse(requestID: number, stackframes: Array<Stackframe>): void {\n    this.writeOut(this._marshaller.marshallStackFramesResponse(requestID, stackframes));\n  }\n\n  sendScopesResponse(requestID: number, scopes: Array<Scope>): void {\n    this.writeOut(this._marshaller.marshallScopesResponse(requestID, scopes));\n  }\n\n  sendVariablesResponse(requestID: number, variables: Array<Variable>): void {\n    this.writeOut(this._marshaller.marshallVariablesResponse(requestID, variables));\n  }\n\n  sendEvaluateResponse(requestID: number, evalResult: EvaluateResult): void {\n    this.writeOut(this._marshaller.marshallEvaluateResponse(requestID, evalResult));\n  }\n\n  shutdown(): void {\n    this._ioWrapper.clearInFile();\n    this._ioWrapper.clearOutFile();\n  }\n}\n"]}