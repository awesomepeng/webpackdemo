{"version":3,"sources":["../../../src/debugger/common/types.js"],"names":["DebugProtocol"],"mappings":";;AAWA;;IAAYA,a","file":"types.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict */\n\nimport * as DebugProtocol from \"vscode-debugprotocol\";\n\nexport type DebuggerRequest = {\n  id: number,\n  command: string,\n  arguments: DebuggerRequestArguments,\n};\n\nexport type DebuggerRequestArguments =\n  | BreakpointsArguments\n  | RunArguments\n  | StackframeArguments\n  | ScopesArguments\n  | VariablesArguments\n  | StepIntoArguments\n  | StepOverArguments\n  | StepOutArguments\n  | EvaluateArguments;\n\nexport type PrepackLaunchArguments = {\n  kind: \"launch\",\n  prepackRuntime: string,\n  prepackArguments: Array<string>,\n  sourceFiles: Array<string>,\n  debugInFilePath: string,\n  debugOutFilePath: string,\n  outputCallback: Buffer => void,\n  exitCallback: () => void,\n};\n\nexport type Breakpoint = {\n  filePath: string,\n  line: number,\n  column: number,\n};\n\nexport type BreakpointsArguments = {\n  kind: \"breakpoint\",\n  breakpoints: Array<Breakpoint>,\n};\n\nexport type RunArguments = {\n  kind: \"run\",\n};\n\nexport type StackframeArguments = {\n  kind: \"stackframe\",\n};\n\nexport type Stackframe = {\n  id: number,\n  fileName: string,\n  line: number,\n  column: number,\n  functionName: string,\n};\n\nexport type ScopesArguments = {\n  kind: \"scopes\",\n  frameId: number,\n};\n\nexport type VariablesArguments = {\n  kind: \"variables\",\n  variablesReference: number,\n};\n\nexport type StepIntoArguments = {\n  kind: \"stepInto\",\n};\n\nexport type StepOverArguments = {\n  kind: \"stepOver\",\n};\n\nexport type StepOutArguments = {\n  kind: \"stepOut\",\n};\n\nexport type EvaluateArguments = {\n  kind: \"evaluate\",\n  frameId?: number,\n  expression: string,\n};\n\nexport type DebuggerResponse = {\n  id: number,\n  result: DebuggerResponseResult,\n};\n\nexport type DebuggerResponseResult =\n  | ReadyResult\n  | StackframeResult\n  | BreakpointsAddResult\n  | StoppedResult\n  | ScopesResult\n  | VariablesResult\n  | EvaluateResult;\n\nexport type ReadyResult = {\n  kind: \"ready\",\n};\n\nexport type StackframeResult = {\n  kind: \"stackframe\",\n  stackframes: Array<Stackframe>,\n};\n\nexport type BreakpointsAddResult = {\n  kind: \"breakpoint-add\",\n  breakpoints: Array<Breakpoint>,\n};\n\nexport type StoppedResult = {\n  kind: \"stopped\",\n  reason: StoppedReason,\n  filePath: string,\n  line: number,\n  column: number,\n  message?: string,\n};\nexport type Scope = {\n  name: string,\n  variablesReference: number,\n  expensive: boolean,\n};\n\nexport type ScopesResult = {\n  kind: \"scopes\",\n  scopes: Array<Scope>,\n};\n\nexport type Variable = {\n  name: string,\n  value: string,\n  variablesReference: number,\n};\n\nexport type VariablesResult = {\n  kind: \"variables\",\n  variables: Array<Variable>,\n};\n\nexport type EvaluateResult = {\n  kind: \"evaluate\",\n  displayValue: string,\n  type: string,\n  variablesReference: number,\n};\n\nexport type LaunchRequestArguments = {\n  ...DebugProtocol.LaunchRequestArguments,\n  noDebug?: boolean,\n  sourceFile: string,\n  prepackRuntime: string,\n  prepackArguments: Array<string>,\n};\n\nexport type SteppingType = \"Step Into\" | \"Step Over\" | \"Step Out\";\nexport type StoppedReason = \"Entry\" | \"Breakpoint\" | \"Diagnostic\" | SteppingType;\n\nexport type SourceData = {\n  filePath: string,\n  line: number,\n  column: number,\n  stackSize: number,\n};\n"]}