{"version":3,"sources":["../../../src/intrinsics/fb-www/global.js"],"names":["realm","global","$GlobalObject","react","enabled","defaultPropsHelper","emptyArray","makeFinal","emptyObject","intrinsics","ObjectPrototype","moduleValue","createAbstractObject","kind","moduleExportsValue","$DefineOwnProperty","value","writable","enumerable","configurable","context","requireNameVal","requireNameValValue","fbLibraries","undefined","reactDom","reactDomServer","reactNative","reactRelay","propTypes","requireVal","other","has","get","set","isCompatibleWith"],"mappings":"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","file":"global.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { AbstractValue, ArrayValue, NativeFunctionValue, StringValue, ObjectValue } from \"../../values/index.js\";\nimport { createMockReact } from \"./react-mocks.js\";\nimport { createMockReactDOM, createMockReactDOMServer } from \"./react-dom-mocks.js\";\nimport { createMockReactNative } from \"./react-native-mocks.js\";\nimport { createMockReactRelay } from \"./relay-mocks.js\";\nimport { createAbstract } from \"../prepack/utils.js\";\nimport { createFbMocks } from \"./fb-mocks.js\";\nimport { FatalError } from \"../../errors\";\nimport { Get } from \"../../methods/index.js\";\nimport invariant from \"../../invariant\";\nimport { createDefaultPropsHelper } from \"../../react/utils.js\";\n\nexport default function(realm: Realm): void {\n  let global = realm.$GlobalObject;\n\n  if (realm.react.enabled) {\n    // Create it eagerly so it's created outside effect branches\n    realm.react.defaultPropsHelper = createDefaultPropsHelper(realm);\n    let emptyArray = new ArrayValue(realm);\n    emptyArray.makeFinal();\n    realm.react.emptyArray = emptyArray;\n    let emptyObject = new ObjectValue(realm, realm.intrinsics.ObjectPrototype);\n    emptyObject.makeFinal();\n    realm.react.emptyObject = emptyObject;\n  }\n\n  // module.exports support\n  let moduleValue = AbstractValue.createAbstractObject(realm, \"module\");\n  moduleValue.kind = \"resolved\";\n  let moduleExportsValue = AbstractValue.createAbstractObject(realm, \"module.exports\");\n  moduleExportsValue.kind = \"resolved\";\n\n  moduleValue.$DefineOwnProperty(\"exports\", {\n    value: moduleExportsValue,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n  global.$DefineOwnProperty(\"module\", {\n    value: moduleValue,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  // apply require() mock\n  global.$DefineOwnProperty(\"require\", {\n    value: new NativeFunctionValue(realm, \"require\", \"require\", 0, (context, [requireNameVal]) => {\n      invariant(requireNameVal instanceof StringValue);\n      let requireNameValValue = requireNameVal.value;\n\n      if (requireNameValValue === \"react\" || requireNameValValue === \"React\") {\n        if (realm.fbLibraries.react === undefined) {\n          let react = createMockReact(realm, requireNameValValue);\n          realm.fbLibraries.react = react;\n          return react;\n        }\n        return realm.fbLibraries.react;\n      } else if (requireNameValValue === \"react-dom\" || requireNameValValue === \"ReactDOM\") {\n        if (realm.fbLibraries.reactDom === undefined) {\n          let reactDom = createMockReactDOM(realm, requireNameValValue);\n          realm.fbLibraries.reactDom = reactDom;\n          return reactDom;\n        }\n        return realm.fbLibraries.reactDom;\n      } else if (requireNameValValue === \"react-dom/server\" || requireNameValValue === \"ReactDOMServer\") {\n        if (realm.fbLibraries.reactDomServer === undefined) {\n          let reactDomServer = createMockReactDOMServer(realm, requireNameValValue);\n          realm.fbLibraries.reactDomServer = reactDomServer;\n          return reactDomServer;\n        }\n        return realm.fbLibraries.reactDomServer;\n      } else if (requireNameValValue === \"react-native\" || requireNameValValue === \"ReactNative\") {\n        if (realm.fbLibraries.reactNative === undefined) {\n          let reactNative = createMockReactNative(realm, requireNameValValue);\n          realm.fbLibraries.reactNative = reactNative;\n          return reactNative;\n        }\n        return realm.fbLibraries.reactNative;\n      } else if (requireNameValValue === \"react-relay\" || requireNameValValue === \"RelayModern\") {\n        if (realm.fbLibraries.reactRelay === undefined) {\n          let reactRelay = createMockReactRelay(realm, requireNameValValue);\n          realm.fbLibraries.reactRelay = reactRelay;\n          return reactRelay;\n        }\n        return realm.fbLibraries.reactRelay;\n      } else if (requireNameValValue === \"prop-types\" || requireNameValValue === \"PropTypes\") {\n        if (realm.fbLibraries.react === undefined) {\n          throw new FatalError(\"unable to require PropTypes due to React not being referenced in scope\");\n        }\n        let propTypes = Get(realm, realm.fbLibraries.react, \"PropTypes\");\n        invariant(propTypes instanceof ObjectValue);\n        return propTypes;\n      } else {\n        let requireVal;\n\n        if (realm.fbLibraries.other.has(requireNameValValue)) {\n          requireVal = realm.fbLibraries.other.get(requireNameValValue);\n        } else {\n          requireVal = createAbstract(realm, \"function\", `require(\"${requireNameValValue}\")`);\n          realm.fbLibraries.other.set(requireNameValValue, requireVal);\n        }\n        invariant(requireVal instanceof AbstractValue);\n        return requireVal;\n      }\n    }),\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  if (realm.isCompatibleWith(\"fb-www\")) {\n    createFbMocks(realm, global);\n  }\n}\n"]}