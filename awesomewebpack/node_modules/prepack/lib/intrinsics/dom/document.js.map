{"version":3,"sources":["../../../src/intrinsics/dom/document.js"],"names":["realm","document","intrinsics","ObjectPrototype","useAbstractInterpretation","name","functions","func","Set","body","abstractObject"],"mappings":";;;;;;kBA+Be,UAASA,KAAT,EAA4C;AACzD;AACA,MAAIC,WAAW,uBAAgBD,KAAhB,EAAuBA,MAAME,UAAN,CAAiBC,eAAxC,EAAyD,UAAzD,EAAqE,KAArE,CAAf;;AAEA;AACA,MAAIH,MAAMI,yBAAV,EAAqC;AACnC;AACA,SAAK,IAAIC,IAAT,IAAiBC,SAAjB,EAA4B;AAC1B,UAAIC,OAAO,2BAAeP,KAAf,EAAsB,UAAtB,EAAmC,YAAWK,IAAK,EAAnD,CAAX;AACA,6BAAWG,GAAX,CAAeR,KAAf,EAAsBC,QAAtB,EAAgCI,IAAhC,EAAsCE,IAAtC,EAA4C,KAA5C;AACD;;AAED;AACA,QAAIE,OAAO,uBAAgBT,KAAhB,EAAuBA,MAAME,UAAN,CAAiBC,eAAxC,EAAyD,eAAzD,CAAX;AACA,2BAAWK,GAAX,CAAeR,KAAf,EAAsBC,QAAtB,EAAgC,MAAhC,EAAwCQ,IAAxC,EAA8C,KAA9C;;AAEA;AACA,QAAIC,iBAAiB,2BAAeV,KAAf,EAAsBC,QAAtB,EAAgC,UAAhC,CAArB;AACA,6BAAUS,oDAAV;AACA,WAAOA,cAAP;AACD;AACD,SAAOT,QAAP;AACD,C;;AAzCD;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMK,YAAY,CAChB,gBADgB,EAEhB,iBAFgB,EAGhB,uBAHgB,EAIhB,kBAJgB,EAKhB,qBALgB,EAMhB,uBANgB,EAOhB,eAPgB,EAQhB,kBARgB,EAShB,eATgB,EAUhB,wBAVgB,EAWhB,gBAXgB,CAAlB,C,CAjBA;;;;;;;;;AASA","file":"document.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { ObjectValue, AbstractObjectValue } from \"../../values/index.js\";\nimport { createAbstract } from \"../prepack/utils.js\";\nimport { Properties } from \"../../singletons.js\";\nimport invariant from \"../../invariant\";\n\nconst functions = [\n  \"getElementById\",\n  \"getElementByTag\",\n  \"getElementByClassName\",\n  \"getElementByName\",\n  \"getElementByTagName\",\n  \"getElementByTagNameNS\",\n  \"querySelector\",\n  \"querySelectorAll\",\n  \"createElement\",\n  \"createDocumentFragment\",\n  \"createTextNode\",\n];\n\nexport default function(realm: Realm): AbstractObjectValue {\n  // document object\n  let document = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"document\", false);\n\n  // check if we can use abstracts\n  if (realm.useAbstractInterpretation) {\n    // common methods on document\n    for (let name of functions) {\n      let func = createAbstract(realm, \"function\", `document.${name}`);\n      Properties.Set(realm, document, name, func, false);\n    }\n\n    // document.body\n    let body = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"document.body\");\n    Properties.Set(realm, document, \"body\", body, false);\n\n    // make abstract\n    let abstractObject = createAbstract(realm, document, \"document\");\n    invariant(abstractObject instanceof AbstractObjectValue);\n    return abstractObject;\n  }\n  return document;\n}\n"]}