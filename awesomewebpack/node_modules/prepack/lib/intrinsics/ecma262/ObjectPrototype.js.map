{"version":3,"sources":["../../../src/intrinsics/ecma262/ObjectPrototype.js"],"names":["realm","obj","ObjectPrototypeHasOwnPrototype","defineNativeMethod","context","V","P","ToPropertyKey","throwIfNotConcrete","O","ToObject","x","isInPureScope","key","evaluateWithPossibleThrowCompletion","createTemporalFromBuildFunction","methodNode","objectNode","nameNode","t","callExpression","memberExpression","identifier","topVal","mightBeObject","intrinsics","false","throwIfNotConcreteObject","$GetPrototypeOf","true","desc","$GetOwnProperty","ThrowIfMightHaveBeenDeleted","value","enumerable","undefined","defineNativeProperty","ObjectProto_toString","$DefineOwnProperty","get","set","proto","status","$SetPrototypeOf","createErrorThrowCompletion","TypeError"],"mappings":"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","file":"ObjectPrototype.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport {\n  AbstractValue,\n  NativeFunctionValue,\n  ObjectValue,\n  BooleanValue,\n  NullValue,\n  StringValue,\n} from \"../../values/index.js\";\nimport { SameValuePartial, RequireObjectCoercible } from \"../../methods/abstract.js\";\nimport { HasOwnProperty, HasSomeCompatibleType } from \"../../methods/has.js\";\nimport { Invoke } from \"../../methods/call.js\";\nimport { Properties, To } from \"../../singletons.js\";\nimport { FatalError } from \"../../errors.js\";\nimport type { BabelNodeExpression } from \"babel-types\";\nimport * as t from \"babel-types\";\nimport invariant from \"../../invariant.js\";\nimport { TypesDomain, ValuesDomain } from \"../../domains/index.js\";\n\nexport default function(realm: Realm, obj: ObjectValue): void {\n  // ECMA262 19.1.3.2\n  const ObjectPrototypeHasOwnPrototype = obj.defineNativeMethod(\"hasOwnProperty\", 1, (context, [V]) => {\n    // 1. Let P be ? ToPropertyKey(V).\n    let P = To.ToPropertyKey(realm, V.throwIfNotConcrete());\n\n    // The pure parts are wrapped with a recovery mode.\n    try {\n      // 2. Let O be ? ToObject(this value).\n      let O = To.ToObject(realm, context);\n\n      // 3. Return ? HasOwnProperty(O, P).\n      return new BooleanValue(realm, HasOwnProperty(realm, O, P));\n    } catch (x) {\n      if (realm.isInPureScope() && x instanceof FatalError) {\n        // If we're in pure scope we can try to recover from any fatals by\n        // leaving the call in place which we do by default, but we don't\n        // have to havoc the state of any arguments since this function is pure.\n        // This also lets us define the return type properly.\n        const key = typeof P === \"string\" ? new StringValue(realm, P) : P;\n        return realm.evaluateWithPossibleThrowCompletion(\n          () =>\n            AbstractValue.createTemporalFromBuildFunction(\n              realm,\n              BooleanValue,\n              [ObjectPrototypeHasOwnPrototype, context, key],\n              ([methodNode, objectNode, nameNode]: Array<BabelNodeExpression>) => {\n                return t.callExpression(t.memberExpression(methodNode, t.identifier(\"call\")), [objectNode, nameNode]);\n              }\n            ),\n          TypesDomain.topVal,\n          ValuesDomain.topVal\n        );\n      }\n      throw x;\n    }\n  });\n\n  // ECMA262 19.1.3.3\n  obj.defineNativeMethod(\"isPrototypeOf\", 1, (context, [V]) => {\n    // 1. If Type(V) is not Object, return false.\n    if (!V.mightBeObject()) return realm.intrinsics.false;\n    V = V.throwIfNotConcreteObject();\n\n    // 2. Let O be ? ToObject(this value).\n    let O = To.ToObject(realm, context);\n\n    // 3. Repeat\n    while (true) {\n      // a. Let V be ? V.[[GetPrototypeOf]]().\n      V = V.$GetPrototypeOf();\n\n      // b. If V is null, return false.\n      if (V instanceof NullValue) return realm.intrinsics.false;\n\n      // c. If SameValue(O, V) is true, return true.\n      if (SameValuePartial(realm, O, V) === true) return realm.intrinsics.true;\n    }\n\n    invariant(false);\n  });\n\n  // ECMA262 19.1.3.4\n  obj.defineNativeMethod(\"propertyIsEnumerable\", 1, (context, [V]) => {\n    // 1. Let P be ? ToPropertyKey(V).\n    let P = To.ToPropertyKey(realm, V.throwIfNotConcrete());\n\n    // 2. Let O be ? ToObject(this value).\n    let O = To.ToObject(realm, context);\n\n    // 3. Let desc be ? O.[[GetOwnProperty]](P).\n    let desc = O.$GetOwnProperty(P);\n\n    // 4. If desc is undefined, return false.\n    if (!desc) return realm.intrinsics.false;\n    Properties.ThrowIfMightHaveBeenDeleted(desc.value);\n\n    // 5. Return the value of desc.[[Enumerable]].\n    return desc.enumerable === undefined ? realm.intrinsics.undefined : new BooleanValue(realm, desc.enumerable);\n  });\n\n  // ECMA262 19.1.3.5\n  obj.defineNativeMethod(\"toLocaleString\", 0, context => {\n    // 1. Let O be the this value.\n    let O = context;\n\n    // 2. Return ? Invoke(O, \"toString\").\n    return Invoke(realm, O, \"toString\");\n  });\n\n  // ECMA262 19.1.3.6\n  obj.defineNativeProperty(\"toString\", realm.intrinsics.ObjectProto_toString);\n\n  // ECMA262 19.1.3.7\n  obj.defineNativeMethod(\"valueOf\", 0, context => {\n    // 1. Return ? ToObject(this value).\n    return To.ToObject(realm, context);\n  });\n\n  obj.$DefineOwnProperty(\"__proto__\", {\n    // B.2.2.1.1\n    get: new NativeFunctionValue(realm, undefined, \"get __proto__\", 0, context => {\n      // 1. Let O be ? ToObject(this value).\n      let O = To.ToObject(realm, context);\n\n      // 2. Return ? O.[[GetPrototypeOf]]().\n      return O.$GetPrototypeOf();\n    }),\n\n    // B.2.2.1.2\n    set: new NativeFunctionValue(realm, undefined, \"set __proto__\", 1, (context, [proto]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. If Type(proto) is neither Object nor Null, return undefined.\n      if (!HasSomeCompatibleType(proto, ObjectValue, NullValue)) return realm.intrinsics.undefined;\n\n      // 3. If Type(O) is not Object, return undefined.\n      if (!O.mightBeObject()) return realm.intrinsics.undefined;\n      O = O.throwIfNotConcreteObject();\n\n      // 4. Let status be ? O.[[SetPrototypeOf]](proto).\n      let status = O.$SetPrototypeOf(((proto.throwIfNotConcrete(): any): ObjectValue | NullValue));\n\n      // 5. If status is false, throw a TypeError exception.\n      if (!status) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"couldn't set proto\");\n      }\n\n      // 6. Return undefined.\n      return realm.intrinsics.undefined;\n    }),\n  });\n}\n"]}