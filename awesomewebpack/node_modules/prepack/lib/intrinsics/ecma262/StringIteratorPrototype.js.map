{"version":3,"sources":["../../../src/intrinsics/ecma262/StringIteratorPrototype.js"],"names":["realm","obj","defineNativeMethod","context","O","throwIfNotConcrete","createErrorThrowCompletion","intrinsics","TypeError","s","$IteratedString","CreateIterResultObject","undefined","position","$StringIteratorNextIndex","len","value","length","first","charCodeAt","resultString","String","fromCharCode","second","resultSize","defineNativeProperty","SymbolToStringTag","writable"],"mappings":";;;;;;kBAgBe,UAASA,KAAT,EAAuBC,GAAvB,EAA+C;AAC5D;AACAA,MAAIC,kBAAJ,CAAuB,MAAvB,EAA+B,CAA/B,EAAkCC,WAAW;AAC3C;AACA,QAAIC,IAAID,QAAQE,kBAAR,EAAR;;AAEA;AACA,QAAI,EAAED,+BAAF,CAAJ,EAAiC;AAC/B,YAAMJ,MAAMM,0BAAN,CAAiCN,MAAMO,UAAN,CAAiBC,SAAlD,EAA6D,uBAA7D,CAAN;AACD;;AAED;AACA,QAAI,EAAE,qBAAqBJ,CAArB,IAA0B,8BAA8BA,CAA1D,CAAJ,EAAkE;AAChE,YAAMJ,MAAMM,0BAAN,CAAiCN,MAAMO,UAAN,CAAiBC,SAAlD,EAA6D,uBAA7D,CAAN;AACD;;AAED;AACA,QAAIC,IAAIL,EAAEM,eAAV;;AAEA;AACA,QAAI,CAACD,CAAL,EAAQ;AACN,aAAO,mBAAOE,sBAAP,CAA8BX,KAA9B,EAAqCA,MAAMO,UAAN,CAAiBK,SAAtD,EAAiE,IAAjE,CAAP;AACD;;AAED;AACA,QAAIC,WAAWT,EAAEU,wBAAjB;AACA,6BAAU,OAAOD,QAAP,KAAoB,QAA9B;;AAEA;AACA,QAAIE,MAAMN,EAAEO,KAAF,CAAQC,MAAlB;;AAEA;AACA,QAAIJ,YAAYE,GAAhB,EAAqB;AACnB;AACAX,QAAEM,eAAF,GAAoBE,SAApB;;AAEA;AACA,aAAO,mBAAOD,sBAAP,CAA8BX,KAA9B,EAAqCA,MAAMO,UAAN,CAAiBK,SAAtD,EAAiE,IAAjE,CAAP;AACD;;AAED;AACA,QAAIM,QAAQT,EAAEO,KAAF,CAAQG,UAAR,CAAmBN,QAAnB,CAAZ;;AAEA,QAAIO,YAAJ;AACA;AACA,QAAIF,QAAQ,MAAR,IAAkBA,QAAQ,MAA1B,IAAoCL,WAAW,CAAX,KAAiBE,GAAzD,EAA8D;AAC5DK,qBAAeC,OAAOC,YAAP,CAAoBJ,KAApB,CAAf;AACD,KAFD,MAEO;AACL;AACA;AACA,UAAIK,SAASd,EAAEO,KAAF,CAAQG,UAAR,CAAmBN,WAAW,CAA9B,CAAb;;AAEA;AACA,UAAIU,SAAS,MAAT,IAAmBA,SAAS,MAAhC,EAAwC;AACtCH,uBAAeC,OAAOC,YAAP,CAAoBJ,KAApB,CAAf;AACD,OAFD,MAEO;AACL;AACAE,uBAAeC,OAAOC,YAAP,CAAoBJ,KAApB,EAA2BK,MAA3B,CAAf;AACD;AACF;AACD;AACA,QAAIC,aAAaJ,aAAaH,MAA9B;;AAEA;AACAb,MAAEU,wBAAF,GAA6BD,WAAWW,UAAxC;;AAEA;AACA,WAAO,mBAAOb,sBAAP,CAA8BX,KAA9B,EAAqC,uBAAgBA,KAAhB,EAAuBoB,YAAvB,CAArC,EAA2E,KAA3E,CAAP;AACD,GAlED;;AAoEA;AACAnB,MAAIwB,oBAAJ,CAAyBzB,MAAMO,UAAN,CAAiBmB,iBAA1C,EAA6D,uBAAgB1B,KAAhB,EAAuB,iBAAvB,CAA7D,EAAwG;AACtG2B,cAAU;AAD4F,GAAxG;AAGD,C;;AA9ED;;AACA;;AACA","file":"StringIteratorPrototype.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { Create } from \"../../singletons.js\";\nimport { ObjectValue, StringValue } from \"../../values/index.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm, obj: ObjectValue): void {\n  // ECMA262 21.1.5.2.1\n  obj.defineNativeMethod(\"next\", 0, context => {\n    // 1. Let O be the this value.\n    let O = context.throwIfNotConcrete();\n\n    // 2. If Type(O) is not Object, throw a TypeError exception.\n    if (!(O instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"Type(O) is not Object\");\n    }\n\n    // 3. If O does not have all of the internal slots of an String Iterator Instance (21.1.5.3), throw a TypeError exception.\n    if (!(\"$IteratedString\" in O && \"$StringIteratorNextIndex\" in O)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"Type(O) is not Object\");\n    }\n\n    // 4. Let s be O.[[IteratedString]].\n    let s = O.$IteratedString;\n\n    // 5. If s is undefined, return CreateIterResultObject(undefined, true).\n    if (!s) {\n      return Create.CreateIterResultObject(realm, realm.intrinsics.undefined, true);\n    }\n\n    // 6. Let position be O.[[StringIteratorNextIndex]].\n    let position = O.$StringIteratorNextIndex;\n    invariant(typeof position === \"number\");\n\n    // 7. Let len be the number of elements in s.\n    let len = s.value.length;\n\n    // 8. If position â‰¥ len, then\n    if (position >= len) {\n      // a. Set O.[[IteratedString]] to undefined.\n      O.$IteratedString = undefined;\n\n      // b. Return CreateIterResultObject(undefined, true).\n      return Create.CreateIterResultObject(realm, realm.intrinsics.undefined, true);\n    }\n\n    // 9. Let first be the code unit value at index position in s.\n    let first = s.value.charCodeAt(position);\n\n    let resultString;\n    // 10. If first < 0xD800 or first > 0xDBFF or position+1 = len, let resultString be the string consisting of the single code unit first.\n    if (first < 0xd800 || first > 0xdbff || position + 1 === len) {\n      resultString = String.fromCharCode(first);\n    } else {\n      // 11. Else,\n      // a. Let second be the code unit value at index position+1 in the String s.\n      let second = s.value.charCodeAt(position + 1);\n\n      // b. If second < 0xDC00 or second > 0xDFFF, let resultString be the string consisting of the single code unit first.\n      if (second < 0xdc00 || second > 0xdfff) {\n        resultString = String.fromCharCode(first);\n      } else {\n        // c. Else, let resultString be the string consisting of the code unit first followed by the code unit second.\n        resultString = String.fromCharCode(first, second);\n      }\n    }\n    // 12. Let resultSize be the number of code units in resultString.\n    let resultSize = resultString.length;\n\n    // 13. Set O.[[StringIteratorNextIndex]] to position + resultSize.\n    O.$StringIteratorNextIndex = position + resultSize;\n\n    // 14. Return CreateIterResultObject(resultString, false).\n    return Create.CreateIterResultObject(realm, new StringValue(realm, resultString), false);\n  });\n\n  // ECMA262 21.1.5.2.2\n  obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag, new StringValue(realm, \"String Iterator\"), {\n    writable: false,\n  });\n}\n"]}