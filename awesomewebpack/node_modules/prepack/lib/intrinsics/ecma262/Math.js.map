{"version":3,"sources":["../../../src/intrinsics/ecma262/Math.js"],"names":["realm","obj","intrinsics","ObjectPrototype","defineNativeProperty","SymbolToStringTag","writable","defineNativeConstant","functions","isCompatibleWith","MOBILE_JSC_VERSION","push","name","length","defineNativeMethod","context","args","originalLength","some","arg","every","IsToNumberPure","r","buildMathTemplates","get","undefined","params","substring","templateSource","template","set","createFromTemplate","Math","apply","map","i","ToNumber","throwIfNotConcrete","imulTemplateSrc","imulTemplate","x","y","imul","ToUint32","mathRandomTemplateSrc","mathRandomTemplate","mathRandomGenerator","loc","currentLocation","error","handleError","useAbstractInterpretation","createTemporalFromTemplate","isPure","skipInvariant","random","Map"],"mappings":"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","file":"Math.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { StringValue, ObjectValue, NumberValue, AbstractValue } from \"../../values/index.js\";\nimport { To } from \"../../singletons.js\";\nimport invariant from \"../../invariant.js\";\nimport buildExpressionTemplate from \"../../utils/builder.js\";\nimport { CompilerDiagnostic } from \"../../errors.js\";\n\nlet buildMathTemplates: Map<string, { template: Function, templateSource: string }> = new Map();\n\nexport default function(realm: Realm): ObjectValue {\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"Math\");\n\n  // ECMA262 20.2.1.9\n  obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag, new StringValue(realm, \"Math\"), { writable: false });\n\n  // ECMA262 20.2.1.1\n  obj.defineNativeConstant(\"E\", new NumberValue(realm, 2.7182818284590452354));\n\n  // ECMA262 20.2.1.2\n  obj.defineNativeConstant(\"LN10\", new NumberValue(realm, 2.302585092994046));\n\n  // ECMA262 20.2.1.3\n  obj.defineNativeConstant(\"LN2\", new NumberValue(realm, 0.6931471805599453));\n\n  // ECMA262 20.2.1.4\n  obj.defineNativeConstant(\"LOG10E\", new NumberValue(realm, 0.4342944819032518));\n\n  // ECMA262 20.2.1.5\n  obj.defineNativeConstant(\"LOG2E\", new NumberValue(realm, 1.4426950408889634));\n\n  // ECMA262 20.2.1.6\n  obj.defineNativeConstant(\"PI\", new NumberValue(realm, 3.1415926535897932));\n\n  // ECMA262 20.2.1.7\n  obj.defineNativeConstant(\"SQRT1_2\", new NumberValue(realm, 0.7071067811865476));\n\n  // ECMA262 20.2.1.8\n  obj.defineNativeConstant(\"SQRT2\", new NumberValue(realm, 1.4142135623730951));\n\n  let functions = [\n    // ECMA262 20.2.2.1\n    [\"abs\", 1],\n\n    // ECMA262 20.2.2.2\n    [\"acos\", 1],\n\n    // ECMA262 20.2.2.3\n    [\"acosh\", 1],\n\n    // ECMA262 20.2.2.4\n    [\"asin\", 1],\n\n    // ECMA262 20.2.2.5\n    [\"asinh\", 1],\n\n    // ECMA262 20.2.2.6\n    [\"atan\", 1],\n\n    // ECMA262 20.2.2.7\n    [\"atanh\", 1],\n\n    // ECMA262 20.2.2.8\n    [\"atan2\", 2],\n\n    // ECMA262 20.2.2.9\n    [\"cbrt\", 1],\n\n    // ECMA262 20.2.2.10\n    [\"ceil\", 1],\n\n    // ECMA262 20.2.2.12\n    [\"cos\", 1],\n\n    // ECMA262 20.2.2.13\n    [\"cosh\", 1],\n\n    // ECMA262 20.2.2.14\n    [\"exp\", 1],\n\n    // ECMA262 20.2.2.15\n    [\"expm1\", 1],\n\n    // ECMA262 20.2.2.16\n    [\"floor\", 1],\n\n    // ECMA262 20.2.2.17\n    [\"fround\", 1],\n\n    // ECMA262 20.2.2.18\n    [\"hypot\", 2],\n\n    // ECMA262 20.2.2.20\n    [\"log\", 1],\n\n    // ECMA262 20.2.2.21\n    [\"log1p\", 1],\n\n    // ECMA262 20.2.2.22\n    [\"log10\", 1],\n\n    // ECMA262 20.2.2.23\n    [\"log2\", 1],\n\n    // ECMA262 20.2.2.24 ( _value1_, _value2_, ..._values_ )\n    [\"max\", 2],\n\n    // ECMA262 20.2.2.25\n    [\"min\", 2],\n\n    // ECMA262 20.2.2.26\n    [\"pow\", 2],\n\n    // ECMA262 20.2.2.28\n    [\"round\", 1],\n\n    // ECMA262 20.2.2.30\n    [\"sin\", 1],\n\n    // ECMA262 20.2.2.31\n    [\"sinh\", 1],\n\n    // ECMA262 20.2.2.32\n    [\"sqrt\", 1],\n\n    // ECMA262 20.2.2.33\n    [\"tan\", 1],\n\n    // ECMA262 20.2.2.34\n    [\"tanh\", 1],\n\n    // ECMA262 20.2.2.35\n    [\"trunc\", 1],\n  ];\n\n  // ECMA262 20.2.2.11\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    functions.push([\"clz32\", 1]);\n\n  // ECMA262 20.2.2.29 (_x_)\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    functions.push([\"sign\", 1]);\n\n  for (let [name, length] of functions) {\n    obj.defineNativeMethod(name, length, (context, args, originalLength) => {\n      invariant(originalLength >= 0);\n      args.length = originalLength;\n      if (\n        originalLength <= 26 &&\n        args.some(arg => arg instanceof AbstractValue) &&\n        args.every(arg => To.IsToNumberPure(realm, arg))\n      ) {\n        let r = buildMathTemplates.get(name);\n        if (r === undefined) {\n          let params = \"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\".substring(0, originalLength * 2 - 1);\n          let templateSource = `Math.${name}(${params})`;\n          let template = buildExpressionTemplate(templateSource);\n          buildMathTemplates.set(name, (r = { template, templateSource }));\n        }\n        return AbstractValue.createFromTemplate(realm, r.template, NumberValue, args, r.templateSource);\n      }\n\n      return new NumberValue(\n        realm,\n        Math[name].apply(null, args.map((arg, i) => To.ToNumber(realm, arg.throwIfNotConcrete())))\n      );\n    });\n  }\n\n  const imulTemplateSrc = \"global.Math.imul(A, B)\";\n  const imulTemplate = buildExpressionTemplate(imulTemplateSrc);\n\n  // ECMA262 20.2.2.19\n  obj.defineNativeMethod(\"imul\", 2, (context, [x, y]) => {\n    if (\n      (x instanceof AbstractValue || y instanceof AbstractValue) &&\n      To.IsToNumberPure(realm, x) &&\n      To.IsToNumberPure(realm, y)\n    ) {\n      return AbstractValue.createFromTemplate(realm, imulTemplate, NumberValue, [x, y], imulTemplateSrc);\n    }\n\n    return new NumberValue(\n      realm,\n      Math.imul(To.ToUint32(realm, x.throwIfNotConcrete()), To.ToUint32(realm, y.throwIfNotConcrete()))\n    );\n  });\n\n  const mathRandomTemplateSrc = \"global.Math.random()\";\n  const mathRandomTemplate = buildExpressionTemplate(mathRandomTemplateSrc);\n\n  // ECMA262 20.2.2.27\n  obj.defineNativeMethod(\"random\", 0, context => {\n    let mathRandomGenerator = realm.mathRandomGenerator;\n    if (mathRandomGenerator !== undefined) {\n      let loc = realm.currentLocation;\n      let error = new CompilerDiagnostic(\n        \"Result of Math.random() is made deterministic via a fixed mathRandomSeed\",\n        loc,\n        \"PP8000\",\n        \"Information\"\n      );\n      realm.handleError(error);\n\n      return new NumberValue(realm, mathRandomGenerator());\n    } else if (realm.useAbstractInterpretation) {\n      return AbstractValue.createTemporalFromTemplate(realm, mathRandomTemplate, NumberValue, [], {\n        isPure: true,\n        skipInvariant: true,\n      });\n    } else {\n      return new NumberValue(realm, Math.random());\n    }\n  });\n\n  return obj;\n}\n"]}