{"version":3,"sources":["../../../src/intrinsics/ecma262/Object.js"],"names":["realm","func","context","value","argCount","NewTarget","OrdinaryCreateFromConstructor","ObjectCreate","intrinsics","ObjectPrototype","ToObject","isCompatibleWith","MOBILE_JSC_VERSION","defineNativeMethod","target","sources","to","to_must_be_partial","length","delayedSources","nextSource","isInPureScope","instantRender","enabled","evaluateWithPossibleThrowCompletion","tryAndApplySourceOrRecover","undefined","topVal","applyObjectAssignSource","hasStringOrSymbolProperties","toSnapshot","getSnapshot","push","makePartial","makeSimple","createTemporalObjectAssign","O","Properties","createErrorThrowCompletion","TypeError","obj","throwIfNotConcrete","mightBeUndefined","ObjectDefineProperties","P","Attributes","mightBeObject","throwIfNotObject","key","ToPropertyKey","desc","ToPropertyDescriptor","DefinePropertyOrThrow","throwIfNotConcreteObject","status","getOwnPropertyDescriptor","$GetOwnProperty","getterFunc","get","intrinsicName","useAbstractInterpretation","result","createTemporalFromBuildFunction","methodNode","objNode","keyNode","t","callExpression","set","enumerable","configurable","propDesc","FromPropertyDescriptor","ownKeys","$OwnPropertyKeys","descriptors","ThrowIfMightHaveBeenDeleted","descriptor","CreateDataProperty","$GetPrototypeOf","value1","value2","false","true","objectKeys","array","createTemporalWithWidenedNumericProperty","isIntrinsicAndHasWidenedNumericProperty","nameList","CreateArrayFromList","objectValues","objectEntries","$PreventExtensions","proto","$SetPrototypeOf","snapshotToObjectAndRemoveProperties","removeProperties","handleObjectAssignSnapshot","frm","frm_was_partial","values","isTop","reportIntrospectionError","mightBeHavocedObject","kind","args","frmSnapshot","temporalAlias","copyKeys","keys","from","nextKey","propValue","Set","isPartialObject","isSimpleObject","makeNotPartial","effects","savedSuppressDiagnostics","suppressDiagnostics","evaluateForEffects","e","null","didSnapshot","applyEffects","completion","composeWithSavedCompletion"],"mappings":"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","file":"Object.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { TypesDomain, ValuesDomain } from \"../../domains/index.js\";\nimport { FatalError } from \"../../errors.js\";\nimport { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue } from \"../../values/index.js\";\nimport { AbruptCompletion, PossiblyNormalCompletion } from \"../../completions.js\";\nimport {\n  AbstractValue,\n  AbstractObjectValue,\n  ArrayValue,\n  ObjectValue,\n  NullValue,\n  UndefinedValue,\n  StringValue,\n  BooleanValue,\n  SymbolValue,\n  Value,\n} from \"../../values/index.js\";\nimport {\n  IsExtensible,\n  EnumerableOwnProperties,\n  GetOwnPropertyKeys,\n  Get,\n  RequireObjectCoercible,\n  SameValuePartial,\n  TestIntegrityLevel,\n  SetIntegrityLevel,\n  HasSomeCompatibleType,\n} from \"../../methods/index.js\";\nimport { Create, Havoc, Properties as Props, To } from \"../../singletons.js\";\nimport * as t from \"babel-types\";\nimport invariant from \"../../invariant.js\";\n\nfunction snapshotToObjectAndRemoveProperties(\n  to: ObjectValue | AbstractObjectValue,\n  delayedSources: Array<Value>\n): void {\n  // If to has properties, we better remove them because after the temporal call to Object.assign we don't know their values anymore\n  if (to.hasStringOrSymbolProperties()) {\n    // Preserve them in a snapshot and add the snapshot to the sources\n    delayedSources.push(to.getSnapshot({ removeProperties: true }));\n  }\n}\n\nfunction handleObjectAssignSnapshot(\n  to: ObjectValue | AbstractObjectValue,\n  frm: ObjectValue | AbstractObjectValue,\n  frm_was_partial: boolean,\n  delayedSources: Array<Value>\n): boolean {\n  if (to instanceof AbstractObjectValue && to.values.isTop()) {\n    // We don't know which objects to make partial and making all objects partial is failure in itself\n    AbstractValue.reportIntrospectionError(to);\n    throw new FatalError();\n  } else {\n    if (frm instanceof ObjectValue && frm.mightBeHavocedObject()) {\n      // \"frm\" is havoced, so it might contain properties that potentially overwrite\n      // properties already on the \"to\" object.\n      snapshotToObjectAndRemoveProperties(to, delayedSources);\n      // it's not safe to trust any of its values\n      delayedSources.push(frm);\n    } else if (frm_was_partial) {\n      // \"frm\" is partial, so it might contain properties that potentially overwrite\n      // properties already on the \"to\" object.\n      snapshotToObjectAndRemoveProperties(to, delayedSources);\n      if (frm instanceof AbstractObjectValue && frm.kind === \"explicit conversion to object\") {\n        // Make it implicit again since it is getting delayed into an Object.assign call.\n        delayedSources.push(frm.args[0]);\n      } else {\n        let frmSnapshot = frm.getSnapshot();\n        frm.temporalAlias = frmSnapshot;\n        frm.makePartial();\n        delayedSources.push(frmSnapshot);\n      }\n    } else {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction copyKeys(realm: Realm, keys, from, to): void {\n  // c. Repeat for each element nextKey of keys in List order,\n  for (let nextKey of keys) {\n    // i. Let desc be ? from.[[GetOwnProperty]](nextKey).\n    let desc = from.$GetOwnProperty(nextKey);\n\n    // ii. If desc is not undefined and desc.[[Enumerable]] is true, then\n    if (desc && desc.enumerable) {\n      Props.ThrowIfMightHaveBeenDeleted(desc.value);\n\n      // 1. Let propValue be ? Get(from, nextKey).\n      let propValue = Get(realm, from, nextKey);\n\n      // 2. Perform ? Set(to, nextKey, propValue, true).\n      Props.Set(realm, to, nextKey, propValue, true);\n    }\n  }\n}\n\nfunction applyObjectAssignSource(\n  realm: Realm,\n  nextSource: Value,\n  to: ObjectValue | AbstractObjectValue,\n  delayedSources: Array<Value>,\n  to_must_be_partial: boolean\n): boolean {\n  let keys, frm;\n\n  // a. If nextSource is undefined or null, let keys be a new empty List.\n  if (HasSomeCompatibleType(nextSource, NullValue, UndefinedValue)) {\n    return to_must_be_partial;\n  }\n\n  // b. Else,\n  // i. Let from be ToObject(nextSource).\n  frm = To.ToObject(realm, nextSource);\n\n  // ii. Let keys be ? from.[[OwnPropertyKeys]]().\n  let frm_was_partial = frm.isPartialObject();\n  if (frm_was_partial) {\n    if (!to.isSimpleObject() || !frm.isSimpleObject()) {\n      // If an object is not a simple object, it may have getters on it that can\n      // mutate any state as a result. We don't yet support this.\n      AbstractValue.reportIntrospectionError(nextSource);\n      throw new FatalError();\n    }\n\n    to_must_be_partial = true;\n    // Make this temporarily not partial\n    // so that we can call frm.$OwnPropertyKeys below.\n    frm.makeNotPartial();\n  }\n\n  try {\n    keys = frm.$OwnPropertyKeys();\n    if (to_must_be_partial) {\n      handleObjectAssignSnapshot(to, frm, frm_was_partial, delayedSources);\n    }\n  } finally {\n    if (frm_was_partial) {\n      frm.makePartial();\n    }\n  }\n\n  // c. Repeat for each element nextKey of keys in List order,\n  invariant(frm, \"from required\");\n  invariant(keys, \"keys required\");\n  copyKeys(realm, keys, frm, to);\n  return to_must_be_partial;\n}\n\nfunction tryAndApplySourceOrRecover(\n  realm: Realm,\n  nextSource: Value,\n  to: ObjectValue | AbstractObjectValue,\n  delayedSources: Array<Value>,\n  to_must_be_partial: boolean\n): boolean {\n  invariant(!realm.instantRender.enabled);\n  let effects;\n  let savedSuppressDiagnostics = realm.suppressDiagnostics;\n  try {\n    realm.suppressDiagnostics = true;\n    effects = realm.evaluateForEffects(\n      () => {\n        to_must_be_partial = applyObjectAssignSource(realm, nextSource, to, delayedSources, to_must_be_partial);\n        return realm.intrinsics.undefined;\n      },\n      undefined,\n      \"tryAndApplySourceOrRecover\"\n    );\n  } catch (e) {\n    invariant(nextSource !== realm.intrinsics.null && nextSource !== realm.intrinsics.undefined);\n    let frm = To.ToObject(realm, nextSource);\n\n    if (e instanceof FatalError && to.isSimpleObject()) {\n      to_must_be_partial = true;\n      let frm_was_partial = frm.isPartialObject();\n      let didSnapshot = handleObjectAssignSnapshot(to, frm, frm_was_partial, delayedSources);\n      if (!didSnapshot) {\n        delayedSources.push(frm);\n      }\n      // Havoc the frm value because it can have getters on it\n      Havoc.value(realm, frm);\n      return to_must_be_partial;\n    }\n    throw e;\n  } finally {\n    realm.suppressDiagnostics = savedSuppressDiagnostics;\n  }\n  // Note that the effects of (non joining) abrupt branches are not included\n  // in effects, but are tracked separately inside completion.\n  realm.applyEffects(effects);\n  let completion = effects.result;\n  if (completion instanceof PossiblyNormalCompletion) {\n    // in this case one of the branches may complete abruptly, which means that\n    // not all control flow branches join into one flow at this point.\n    // Consequently we have to continue tracking changes until the point where\n    // all the branches come together into one.\n    completion = realm.composeWithSavedCompletion(completion);\n  }\n  // return or throw completion\n  if (completion instanceof AbruptCompletion) throw completion;\n  return to_must_be_partial;\n}\n\nexport default function(realm: Realm): NativeFunctionValue {\n  // ECMA262 19.1.1.1\n  let func = new NativeFunctionValue(realm, \"Object\", \"Object\", 1, (context, [value], argCount, NewTarget) => {\n    // 1. If NewTarget is neither undefined nor the active function, then\n    if (NewTarget && NewTarget !== func) {\n      // a. Return ? OrdinaryCreateFromConstructor(NewTarget, \"%ObjectPrototype%\").\n      return Create.OrdinaryCreateFromConstructor(realm, NewTarget, \"ObjectPrototype\");\n    }\n\n    // 2. If value is null, undefined or not supplied, return ObjectCreate(%ObjectPrototype%).\n    if (HasSomeCompatibleType(value, NullValue, UndefinedValue)) {\n      return Create.ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n    }\n\n    // 3. Return ToObject(value).\n    return To.ToObject(realm, value);\n  });\n\n  // ECMA262 19.1.2.1\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\")) {\n    func.defineNativeMethod(\"assign\", 2, (context, [target, ...sources]) => {\n      // 1. Let to be ? ToObject(target).\n      let to = To.ToObject(realm, target);\n      let to_must_be_partial = false;\n\n      // 2. If only one argument was passed, return to.\n      if (!sources.length) return to;\n\n      // 3. Let sources be the List of argument values starting with the second argument.\n      sources;\n      let delayedSources = [];\n\n      // 4. For each element nextSource of sources, in ascending index order,\n      for (let nextSource of sources) {\n        if (realm.isInPureScope() && !realm.instantRender.enabled) {\n          realm.evaluateWithPossibleThrowCompletion(\n            () => {\n              to_must_be_partial = tryAndApplySourceOrRecover(\n                realm,\n                nextSource,\n                to,\n                delayedSources,\n                to_must_be_partial\n              );\n              return realm.intrinsics.undefined;\n            },\n            TypesDomain.topVal,\n            ValuesDomain.topVal\n          );\n        } else {\n          to_must_be_partial = applyObjectAssignSource(realm, nextSource, to, delayedSources, to_must_be_partial);\n        }\n      }\n\n      // 5. Return to.\n      if (to_must_be_partial) {\n        // if to has properties, we copy and delay them (at this stage we do not need to remove them)\n        if (to.hasStringOrSymbolProperties()) {\n          let toSnapshot = to.getSnapshot();\n          delayedSources.push(toSnapshot);\n        }\n\n        to.makePartial();\n\n        // We already established above that to is simple,\n        // but now that it is partial we need to set the _isSimple flag.\n        to.makeSimple();\n\n        AbstractValue.createTemporalObjectAssign(realm, to, delayedSources);\n      }\n      return to;\n    });\n  }\n\n  // ECMA262 19.1.2.2\n  func.defineNativeMethod(\"create\", 2, (context, [O, Properties]) => {\n    // 1. If Type(O) is neither Object nor Null, throw a TypeError exception.\n    if (!HasSomeCompatibleType(O, ObjectValue, NullValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let obj be ObjectCreate(O).\n    let obj = Create.ObjectCreate(realm, ((O.throwIfNotConcrete(): any): ObjectValue | NullValue));\n\n    // 3. If Properties is not undefined, then\n    if (!Properties.mightBeUndefined()) {\n      // a. Return ? ObjectDefineProperties(obj, Properties).\n      return Props.ObjectDefineProperties(realm, obj, Properties);\n    }\n    Properties.throwIfNotConcrete();\n\n    // 4. Return obj.\n    return obj;\n  });\n\n  // ECMA262 19.1.2.3\n  func.defineNativeMethod(\"defineProperties\", 2, (context, [O, Properties]) => {\n    // 1. Return ? ObjectDefineProperties(O, Properties).\n    return Props.ObjectDefineProperties(realm, O, Properties);\n  });\n\n  // ECMA262 19.1.2.4\n  func.defineNativeMethod(\"defineProperty\", 3, (context, [O, P, Attributes]) => {\n    // 1. If Type(O) is not Object, throw a TypeError exception.\n    if (!O.mightBeObject()) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n    O = O.throwIfNotObject();\n\n    // 2. Let key be ? ToPropertyKey(P).\n    let key = To.ToPropertyKey(realm, P.throwIfNotConcrete());\n\n    // 3. Let desc be ? ToPropertyDescriptor(Attributes).\n    let desc = To.ToPropertyDescriptor(realm, Attributes);\n\n    // 4. Perform ? DefinePropertyOrThrow(O, key, desc).\n    Props.DefinePropertyOrThrow(realm, (O: any), key, desc);\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.5\n  func.defineNativeMethod(\"freeze\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? SetIntegrityLevel(O, \"frozen\").\n    O = O.throwIfNotConcreteObject();\n    let status = SetIntegrityLevel(realm, O, \"frozen\");\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.6\n  let getOwnPropertyDescriptor = func.defineNativeMethod(\"getOwnPropertyDescriptor\", 2, (context, [O, P]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = To.ToObject(realm, O);\n\n    // 2. Let key be ? ToPropertyKey(P).\n    let key = To.ToPropertyKey(realm, P.throwIfNotConcrete());\n\n    // 3. Let desc be ? obj.[[GetOwnProperty]](key).\n    let desc = obj.$GetOwnProperty(key);\n\n    let getterFunc = desc && desc.get;\n    // If we are returning a descriptor with a NativeFunctionValue\n    // and it has no intrinsic name, then we create a temporal as this\n    // can only be done at runtime\n    if (\n      getterFunc instanceof NativeFunctionValue &&\n      getterFunc.intrinsicName === undefined &&\n      realm.useAbstractInterpretation\n    ) {\n      invariant(P instanceof Value);\n      // this will create a property descriptor at runtime\n      let result = AbstractValue.createTemporalFromBuildFunction(\n        realm,\n        ObjectValue,\n        [getOwnPropertyDescriptor, obj, P],\n        ([methodNode, objNode, keyNode]) => t.callExpression(methodNode, [objNode, keyNode])\n      );\n      invariant(result instanceof AbstractObjectValue);\n      result.makeSimple();\n      let get = Get(realm, result, \"get\");\n      let set = Get(realm, result, \"set\");\n      invariant(get instanceof AbstractValue);\n      invariant(set instanceof AbstractValue);\n      desc = {\n        get,\n        set,\n        enumerable: false,\n        configurable: true,\n      };\n    }\n\n    // 4. Return FromPropertyDescriptor(desc).\n    let propDesc = Props.FromPropertyDescriptor(realm, desc);\n\n    return propDesc;\n  });\n\n  // ECMA262 19.1.2.7\n  func.defineNativeMethod(\"getOwnPropertyNames\", 1, (context, [O]) => {\n    // 1. Return ? GetOwnPropertyKeys(O, String).\n    return GetOwnPropertyKeys(realm, O, StringValue);\n  });\n\n  // ECMA262 19.1.2.8\n  func.defineNativeMethod(\"getOwnPropertyDescriptors\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = To.ToObject(realm, O);\n\n    // 2. Let ownKeys be ? obj.[[OwnPropertyKeys]]().\n    let ownKeys = obj.$OwnPropertyKeys();\n\n    // 3. Let descriptors be ! ObjectCreate(%ObjectPrototype%).\n    let descriptors = Create.ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n\n    // 4. Repeat, for each element key of ownKeys in List order,\n    for (let key of ownKeys) {\n      // a. Let desc be ? obj.[[GetOwnProperty]](key).\n      let desc = obj.$GetOwnProperty(key);\n      if (desc !== undefined) Props.ThrowIfMightHaveBeenDeleted(desc.value);\n\n      // b. Let descriptor be ! FromPropertyDescriptor(desc).\n      let descriptor = Props.FromPropertyDescriptor(realm, desc);\n\n      // c. If descriptor is not undefined, perform ! CreateDataProperty(descriptors, key, descriptor).\n      if (!(descriptor instanceof UndefinedValue)) Create.CreateDataProperty(realm, descriptors, key, descriptor);\n    }\n\n    // 5. Return descriptors.\n    return descriptors;\n  });\n\n  // ECMA262 19.1.2.9\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    func.defineNativeMethod(\"getOwnPropertySymbols\", 1, (context, [O]) => {\n      // Return ? GetOwnPropertyKeys(O, Symbol).\n      return GetOwnPropertyKeys(realm, O, SymbolValue);\n    });\n\n  // ECMA262 19.1.2.10\n  func.defineNativeMethod(\"getPrototypeOf\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = To.ToObject(realm, O);\n\n    // 2. Return ? obj.[[GetPrototypeOf]]().\n    return obj.$GetPrototypeOf();\n  });\n\n  // ECMA262 19.1.2.11\n  func.defineNativeMethod(\"is\", 2, (context, [value1, value2]) => {\n    // 1. Return SameValue(value1, value2).\n    return new BooleanValue(realm, SameValuePartial(realm, value1, value2));\n  });\n\n  // ECMA262 19.1.2.12\n  func.defineNativeMethod(\"isExtensible\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return false.\n    if (!O.mightBeObject()) return realm.intrinsics.false;\n    O = O.throwIfNotObject();\n\n    // 2. Return ? IsExtensible(O).\n    return new BooleanValue(realm, IsExtensible(realm, O));\n  });\n\n  // ECMA262 19.1.2.13\n  func.defineNativeMethod(\"isFrozen\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return true.\n    if (!O.mightBeObject()) return realm.intrinsics.true;\n\n    // 2. Return ? TestIntegrityLevel(O, \"frozen\").\n    O = O.throwIfNotConcreteObject();\n    return new BooleanValue(realm, TestIntegrityLevel(realm, O, \"frozen\"));\n  });\n\n  // ECMA262 19.1.2.14\n  func.defineNativeMethod(\"isSealed\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return true.\n    if (!O.mightBeObject()) return realm.intrinsics.true;\n\n    // 2. Return ? TestIntegrityLevel(O, \"sealed\").\n    O = O.throwIfNotConcreteObject();\n    return new BooleanValue(realm, TestIntegrityLevel(realm, O, \"sealed\"));\n  });\n\n  // ECMA262 19.1.2.15\n  let objectKeys = func.defineNativeMethod(\"keys\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = To.ToObject(realm, O);\n\n    // If we're in pure scope and the items are completely abstract,\n    // then create an abstract temporal with an array kind\n    if (realm.isInPureScope() && obj instanceof AbstractObjectValue) {\n      let array = ArrayValue.createTemporalWithWidenedNumericProperty(\n        realm,\n        [objectKeys, obj],\n        ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n      );\n      return array;\n    } else if (ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj)) {\n      return ArrayValue.createTemporalWithWidenedNumericProperty(realm, [objectKeys, obj], ([methodNode, objNode]) =>\n        t.callExpression(methodNode, [objNode])\n      );\n    }\n\n    // 2. Let nameList be ? EnumerableOwnProperties(obj, \"key\").\n    let nameList = EnumerableOwnProperties(realm, obj.throwIfNotConcreteObject(), \"key\");\n\n    // 3. Return CreateArrayFromList(nameList).\n    return Create.CreateArrayFromList(realm, nameList);\n  });\n\n  // ECMA262 9.1.2.16\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\")) {\n    let objectValues = func.defineNativeMethod(\"values\", 1, (context, [O]) => {\n      // 1. Let obj be ? ToObject(O).\n      let obj = To.ToObject(realm, O);\n\n      if (realm.isInPureScope()) {\n        // If we're in pure scope and the items are completely abstract,\n        // then create an abstract temporal with an array kind\n        if (obj instanceof AbstractObjectValue) {\n          let array = ArrayValue.createTemporalWithWidenedNumericProperty(\n            realm,\n            [objectValues, obj],\n            ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n          );\n          return array;\n        } else if (ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj)) {\n          return ArrayValue.createTemporalWithWidenedNumericProperty(\n            realm,\n            [objectValues, obj],\n            ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n          );\n        }\n      }\n\n      // 2. Let nameList be ? EnumerableOwnProperties(obj, \"value\").\n      let nameList = EnumerableOwnProperties(realm, obj.throwIfNotConcreteObject(), \"value\");\n\n      // 3. Return CreateArrayFromList(nameList).\n      return Create.CreateArrayFromList(realm, nameList);\n    });\n  }\n\n  // ECMA262 19.1.2.17\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\")) {\n    let objectEntries = func.defineNativeMethod(\"entries\", 1, (context, [O]) => {\n      // 1. Let obj be ? ToObject(O).\n      let obj = To.ToObject(realm, O);\n\n      // If we're in pure scope and the items are completely abstract,\n      // then create an abstract temporal with an array kind\n      if (realm.isInPureScope() && obj instanceof AbstractObjectValue) {\n        let array = ArrayValue.createTemporalWithWidenedNumericProperty(\n          realm,\n          [objectEntries, obj],\n          ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n        );\n        return array;\n      } else if (ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj)) {\n        return ArrayValue.createTemporalWithWidenedNumericProperty(\n          realm,\n          [objectEntries, obj],\n          ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n        );\n      }\n\n      // 2. Let nameList be ? EnumerableOwnProperties(obj, \"key+value\").\n      let nameList = EnumerableOwnProperties(realm, obj.throwIfNotConcreteObject(), \"key+value\");\n\n      // 3. Return CreateArrayFromList(nameList).\n      return Create.CreateArrayFromList(realm, nameList);\n    });\n  }\n\n  // ECMA262 19.1.2.18\n  func.defineNativeMethod(\"preventExtensions\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? O.[[PreventExtensions]]().\n    O = O.throwIfNotConcreteObject();\n    let status = O.$PreventExtensions();\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.19\n  func.defineNativeMethod(\"seal\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? SetIntegrityLevel(O, \"sealed\").\n    O = O.throwIfNotConcreteObject();\n    let status = SetIntegrityLevel(realm, O, \"sealed\");\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.20\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    func.defineNativeMethod(\"setPrototypeOf\", 2, (context, [O, proto]) => {\n      // 1. Let O be ? RequireObjectCoercible(O).\n      O = RequireObjectCoercible(realm, O);\n\n      // 2. If Type(proto) is neither Object nor Null, throw a TypeError exception.\n      if (!HasSomeCompatibleType(proto, ObjectValue, NullValue)) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n      }\n\n      // 3. If Type(O) is not Object, return O.\n      O = O.throwIfNotConcrete();\n      if (!(O instanceof ObjectValue)) return O;\n\n      // 4. Let status be ? O.[[SetPrototypeOf]](proto).\n      let status = O.$SetPrototypeOf(((proto: any): ObjectValue | NullValue));\n\n      // 5. If status is false, throw a TypeError exception.\n      if (status === false) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n      }\n\n      // 6. Return O.\n      return O;\n    });\n\n  return func;\n}\n"]}