{"version":3,"sources":["../../../src/react/experimental-server-rendering/rendering.js"],"names":["createMarkupForCustomAttribute","renderToString","t","renderValueWithHelper","realm","value","helper","val","createFromBuildFunction","helperNode","valueNode","callExpression","dangerousStyleValue","name","isCustomProperty","isEmpty","intrinsics","null","undefined","hasOwnProperty","trim","createMarkupForProperty","htmlEscapeHelper","propertyInfo","attributeName","type","createMarkupForStyles","styles","serialized","delimiter","isPartialObject","styleName","binding","properties","descriptor","indexOf","styleValue","push","length","renderReactNode","createOpenTagMarkup","tagVerbatim","tagLowercase","propsValue","namespace","makeStaticMarkup","isRootElement","ret","propName","propValue","markup","has","Array","isArray","reactNode","normalizedNode","args","quasis","lastWasAbstract","element","templateElement","raw","cooked","valueNodes","templateLiteral","ReactDOMServerRenderer","constructor","previousWasTextNode","arrayHelper","render","depth","rootReactNode","_renderValue","_renderText","text","_renderAbstractConditionalValue","condValue","consequentVal","alternateVal","evaluateWithAbstractConditional","evaluateForEffects","_renderAbstractValue","kind","_renderArrayValue","isIntrinsicAndHasWidenedNumericProperty","arrayHint","react","arrayHints","get","elements","elementValue","renderedElement","_renderReactElement","reactElement","typeValue","tag","toLowerCase","out","footer","innerMarkup","charAt","childrenValue","childrenOut","handleNestedOptimizedFunctions","reconciler","staticMarkup","nestedOptimizedClosures","func","evaluatedNode","componentType","context","hasEvaluatedNestedClosure","hasEvaluatedRootNode","closureEffects","resolveNestedOptimizedClosure","closureEffectsRenderedToString","evaluateForEffectsWithPriorEffects","serverRenderer","result","optimizedNestedClosuresToWrite","effects","reactStatistics","firstRenderOnly","isRoot","evaluatedRootNode","ToObject","resolveReactComponentTree","generator","emitStatement","variableDeclaration","variableDeclarator","identifier","regExpLiteral","booleanLiteral","applyEffects","renderValue"],"mappings":"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","file":"rendering.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\n// Warning: This code is experimental and might not fully work. There is no guarantee\n// that it is up-to-date with the current react-dom/server logic and there may also be\n// security holes in the string escaping because of this.\n\nimport type { Realm } from \"../../realm.js\";\nimport { ReactStatistics } from \"../../serializer/types.js\";\nimport { SimpleNormalCompletion } from \"../../completions.js\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  ArrayValue,\n  BooleanValue,\n  ECMAScriptSourceFunctionValue,\n  NullValue,\n  NumberValue,\n  ObjectValue,\n  StringValue,\n  SymbolValue,\n  Value,\n  UndefinedValue,\n} from \"../../values/index.js\";\nimport { Reconciler } from \"../reconcilation.js\";\nimport {\n  createReactEvaluatedNode,\n  forEachArrayValue,\n  getComponentName,\n  getProperty,\n  getReactSymbol,\n  isReactElement,\n} from \"../utils.js\";\nimport * as t from \"babel-types\";\nimport invariant from \"../../invariant.js\";\nimport {\n  convertValueToNode,\n  createArrayHelper,\n  createHtmlEscapeHelper,\n  createMarkupForRoot,\n  escapeHtml,\n  getNonChildrenInnerMarkup,\n  quoteAttributeValueForBrowser,\n  isCustomComponent,\n  normalizeNode,\n} from \"./utils.js\";\nimport {\n  BOOLEAN,\n  getPropertyInfo,\n  isAttributeNameSafe,\n  isUnitlessNumber,\n  newlineEatingTags,\n  omittedCloseTags,\n  OVERLOADED_BOOLEAN,\n  RESERVED_PROPS,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n  STYLE,\n} from \"./dom-config.js\";\n// $FlowFixMe: flow complains that this isn't a module but it is, and it seems to load fine\nimport hyphenateStyleName from \"fbjs/lib/hyphenateStyleName\";\nimport { To } from \"../../singletons.js\";\n\nexport type ReactNode = Array<ReactNode> | string | AbstractValue | ArrayValue;\n\nfunction renderValueWithHelper(realm: Realm, value: Value, helper: ECMAScriptSourceFunctionValue): AbstractValue {\n  // given we know nothing of this value, we need to escape the contents of it at runtime\n  let val = AbstractValue.createFromBuildFunction(realm, Value, [helper, value], ([helperNode, valueNode]) =>\n    t.callExpression(helperNode, [valueNode])\n  );\n  invariant(val instanceof AbstractValue);\n  return val;\n}\n\nfunction dangerousStyleValue(realm: Realm, name: string, value: Value, isCustomProperty: boolean): string {\n  let isEmpty =\n    value === realm.intrinsics.null ||\n    value === realm.intrinsics.undefined ||\n    value instanceof BooleanValue ||\n    (value instanceof StringValue && value.value === \"\");\n  if (isEmpty) {\n    return \"\";\n  }\n\n  if (\n    !isCustomProperty &&\n    value instanceof NumberValue &&\n    value.value !== 0 &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  ) {\n    return value.value + \"px\";\n  }\n\n  if (value instanceof StringValue || value instanceof NumberValue) {\n    return (\"\" + value.value).trim();\n  } else {\n    invariant(false, \"TODO\");\n  }\n}\n\nexport function createMarkupForCustomAttribute(realm: Realm, name: string, value: Value): ReactNode {\n  if (!isAttributeNameSafe(name) || value == null) {\n    return \"\";\n  }\n  if (value instanceof StringValue || value instanceof NumberValue) {\n    return name + \"=\" + quoteAttributeValueForBrowser(value.value + \"\");\n  } else {\n    invariant(false, \"TODO\");\n  }\n}\n\nfunction createMarkupForProperty(\n  realm: Realm,\n  name: string,\n  value: Value,\n  htmlEscapeHelper: ECMAScriptSourceFunctionValue\n): ReactNode {\n  const propertyInfo = getPropertyInfo(name);\n  if (name !== \"style\" && shouldIgnoreAttribute(name, propertyInfo, false)) {\n    return \"\";\n  }\n  if (shouldRemoveAttribute(realm, name, value, propertyInfo, false)) {\n    return \"\";\n  }\n  if (propertyInfo !== null) {\n    const attributeName = propertyInfo.attributeName;\n    const { type } = propertyInfo;\n    if (type === BOOLEAN || (type === OVERLOADED_BOOLEAN && value === true)) {\n      return attributeName + '=\"\"';\n    } else if (value instanceof StringValue || value instanceof NumberValue) {\n      return attributeName + \"=\" + quoteAttributeValueForBrowser(value.value + \"\");\n    } else if (value instanceof AbstractValue) {\n      return ([attributeName + \"=\", renderValueWithHelper(realm, value, htmlEscapeHelper)]: Array<ReactNode>);\n    }\n  } else if (value instanceof StringValue || value instanceof NumberValue) {\n    return name + \"=\" + quoteAttributeValueForBrowser(value.value + \"\");\n  } else if (value instanceof AbstractValue) {\n    return ([name + '=\"', renderValueWithHelper(realm, value, htmlEscapeHelper), '\"']: Array<ReactNode>);\n  }\n  invariant(false, \"TODO\");\n}\n\nfunction createMarkupForStyles(realm: Realm, styles: Value): Value {\n  let serialized = ([]: Array<ReactNode>);\n  let delimiter = \"\";\n\n  if (styles instanceof ObjectValue && !styles.isPartialObject()) {\n    for (let [styleName, binding] of styles.properties) {\n      if (binding.descriptor !== undefined) {\n        let isCustomProperty = styleName.indexOf(\"--\") === 0;\n        let styleValue = getProperty(realm, styles, styleName);\n\n        if (styleValue !== realm.intrinsics.null && styleValue !== realm.intrinsics.undefined) {\n          serialized.push(delimiter + hyphenateStyleName(styleName) + \":\");\n          serialized.push(dangerousStyleValue(realm, styleName, styleValue, isCustomProperty));\n          delimiter = \";\";\n        }\n      }\n    }\n  }\n  if (serialized.length > 0) {\n    return renderReactNode(realm, serialized);\n  }\n  return realm.intrinsics.null;\n}\n\nfunction createOpenTagMarkup(\n  realm: Realm,\n  tagVerbatim: string,\n  tagLowercase: string,\n  propsValue: ObjectValue | AbstractObjectValue,\n  namespace: string,\n  makeStaticMarkup: boolean,\n  isRootElement: boolean,\n  htmlEscapeHelper: ECMAScriptSourceFunctionValue\n): Array<ReactNode> {\n  let ret = [\"<\" + tagVerbatim];\n\n  if (propsValue instanceof ObjectValue && !propsValue.isPartialObject()) {\n    for (let [propName, binding] of propsValue.properties) {\n      if (binding.descriptor !== undefined) {\n        let propValue = getProperty(realm, propsValue, propName);\n        if (propValue === realm.intrinsics.null || propValue === realm.intrinsics.undefined) {\n          continue;\n        }\n        if (propName === STYLE) {\n          propValue = createMarkupForStyles(realm, propValue);\n        }\n        let markup;\n\n        if (isCustomComponent(realm, tagLowercase, propsValue)) {\n          if (!RESERVED_PROPS.has(propName)) {\n            markup = createMarkupForCustomAttribute(realm, propName, propValue);\n          }\n        } else {\n          markup = createMarkupForProperty(realm, propName, propValue, htmlEscapeHelper);\n        }\n        if (Array.isArray(markup)) {\n          ret.push(\" \", ...markup);\n        } else if (typeof markup === \"string\" && markup !== \"\") {\n          ret.push(\" \" + markup);\n        } else if (markup) {\n          ret.push(\" \", markup);\n        }\n      }\n    }\n  } else {\n    invariant(false, \"TODO\");\n  }\n\n  // For static pages, no need to put React ID and checksum. Saves lots of\n  // bytes.\n  if (makeStaticMarkup) {\n    return ret;\n  }\n\n  if (isRootElement) {\n    ret.push(\" \" + createMarkupForRoot());\n  }\n  return ret;\n}\n\nfunction renderReactNode(realm: Realm, reactNode: ReactNode): StringValue | AbstractValue {\n  let normalizedNode = normalizeNode(realm, reactNode);\n  if (typeof normalizedNode === \"string\") {\n    return new StringValue(realm, normalizedNode);\n  } else if (normalizedNode instanceof AbstractValue) {\n    return normalizedNode;\n  }\n  invariant(Array.isArray(normalizedNode));\n  let args = [];\n  let quasis = [];\n  let lastWasAbstract = false;\n  for (let element of normalizedNode) {\n    if (typeof element === \"string\") {\n      lastWasAbstract = false;\n      quasis.push(t.templateElement({ raw: element, cooked: element }));\n    } else {\n      if (lastWasAbstract) {\n        quasis.push(t.templateElement({ raw: \"\", cooked: \"\" }));\n      }\n      lastWasAbstract = true;\n      invariant(element instanceof Value);\n      args.push(element);\n    }\n  }\n  let val = AbstractValue.createFromBuildFunction(realm, StringValue, args, valueNodes =>\n    t.templateLiteral(((quasis: any): Array<any>), valueNodes)\n  );\n  invariant(val instanceof AbstractValue);\n  return val;\n}\n\nclass ReactDOMServerRenderer {\n  constructor(realm: Realm, makeStaticMarkup: boolean) {\n    this.realm = realm;\n    this.makeStaticMarkup = makeStaticMarkup;\n    this.previousWasTextNode = false;\n    this.htmlEscapeHelper = createHtmlEscapeHelper(realm);\n    this.arrayHelper = createArrayHelper(realm);\n  }\n  realm: Realm;\n  makeStaticMarkup: boolean;\n  previousWasTextNode: boolean;\n  htmlEscapeHelper: ECMAScriptSourceFunctionValue;\n  arrayHelper: ECMAScriptSourceFunctionValue;\n\n  render(value: Value, namespace: string = \"html\", depth: number = 0): StringValue | AbstractValue {\n    let rootReactNode = this._renderValue(value, namespace, depth);\n    return renderReactNode(this.realm, rootReactNode);\n  }\n\n  _renderText(value: StringValue | NumberValue): string {\n    let text = value.value + \"\";\n\n    if (text === \"\") {\n      return \"\";\n    }\n    if (this.makeStaticMarkup) {\n      return escapeHtml(text);\n    }\n    if (this.previousWasTextNode) {\n      return \"<!-- -->\" + escapeHtml(text);\n    }\n    this.previousWasTextNode = true;\n    return escapeHtml(text);\n  }\n\n  _renderAbstractConditionalValue(\n    condValue: AbstractValue,\n    consequentVal: Value,\n    alternateVal: Value,\n    namespace: string,\n    depth: number\n  ): ReactNode {\n    let val = this.realm.evaluateWithAbstractConditional(\n      condValue,\n      () => {\n        return this.realm.evaluateForEffects(\n          () => this.render(consequentVal, namespace, depth),\n          null,\n          \"_renderAbstractConditionalValue consequent\"\n        );\n      },\n      () => {\n        return this.realm.evaluateForEffects(\n          () => this.render(alternateVal, namespace, depth),\n          null,\n          \"_renderAbstractConditionalValue consequent\"\n        );\n      }\n    );\n    return convertValueToNode(val);\n  }\n\n  _renderAbstractValue(value: AbstractValue, namespace: string, depth: number): ReactNode {\n    if (value.kind === \"conditional\") {\n      let [condValue, consequentVal, alternateVal] = value.args;\n      invariant(condValue instanceof AbstractValue);\n      return this._renderAbstractConditionalValue(condValue, consequentVal, alternateVal, namespace, depth);\n    } else {\n      return renderValueWithHelper(this.realm, value, this.htmlEscapeHelper);\n    }\n  }\n\n  _renderArrayValue(value: ArrayValue, namespace: string, depth: number): Array<ReactNode> | ReactNode {\n    if (ArrayValue.isIntrinsicAndHasWidenedNumericProperty(value)) {\n      let arrayHint = this.realm.react.arrayHints.get(value);\n\n      if (arrayHint !== undefined) {\n        return renderValueWithHelper(this.realm, value, this.arrayHelper);\n      }\n    }\n    let elements = [];\n    forEachArrayValue(this.realm, value, elementValue => {\n      let renderedElement = this._renderValue(elementValue, namespace, depth);\n      if (Array.isArray(renderedElement)) {\n        elements.push(...renderedElement);\n      } else {\n        elements.push(renderedElement);\n      }\n    });\n    // $FlowFixMe: flow gets confused here\n    return elements;\n  }\n\n  _renderReactElement(reactElement: ObjectValue, namespace: string, depth: number): Array<ReactNode> {\n    let typeValue = getProperty(this.realm, reactElement, \"type\");\n    let propsValue = getProperty(this.realm, reactElement, \"props\");\n\n    invariant(propsValue instanceof AbstractObjectValue || propsValue instanceof ObjectValue);\n    if (typeValue instanceof StringValue) {\n      let type = typeValue.value;\n      let tag = type.toLowerCase();\n\n      if (tag === \"input\") {\n        invariant(false, \"TODO\");\n      } else if (tag === \"textarea\") {\n        invariant(false, \"TODO\");\n      } else if (tag === \"select\") {\n        invariant(false, \"TODO\");\n      } else if (tag === \"option\") {\n        invariant(false, \"TODO\");\n      }\n      let out = createOpenTagMarkup(\n        this.realm,\n        type,\n        tag,\n        propsValue,\n        namespace,\n        this.makeStaticMarkup,\n        depth === 0,\n        this.htmlEscapeHelper\n      );\n      let footer = \"\";\n\n      if (omittedCloseTags.has(tag)) {\n        out.push(\"/>\");\n      } else {\n        out.push(\">\");\n        footer = \"</\" + type + \">\";\n      }\n      let innerMarkup = getNonChildrenInnerMarkup(this.realm, propsValue);\n      if (innerMarkup instanceof StringValue) {\n        if (newlineEatingTags[tag] && innerMarkup.value.charAt(0) === \"\\n\") {\n          out.push(\"\\n\");\n        }\n        out.push(innerMarkup.value);\n      } else if (innerMarkup instanceof ObjectValue) {\n        invariant(false, \"TODO\");\n      } else {\n        this.previousWasTextNode = false;\n        let childrenValue = getProperty(this.realm, propsValue, \"children\");\n        let childrenOut = this._renderValue(childrenValue, namespace, depth + 1);\n\n        if (Array.isArray(childrenOut)) {\n          out.push(...childrenOut);\n        } else {\n          out.push(childrenOut);\n        }\n      }\n      out.push(footer);\n      this.previousWasTextNode = false;\n      return out;\n    } else if (typeValue instanceof SymbolValue && typeValue === getReactSymbol(\"react.fragment\", this.realm)) {\n      let childrenValue = getProperty(this.realm, propsValue, \"children\");\n      let childrenOut = this._renderValue(childrenValue, namespace, depth + 1);\n      let out = [];\n\n      if (Array.isArray(childrenOut)) {\n        out.push(...childrenOut);\n      } else {\n        out.push(childrenOut);\n      }\n      this.previousWasTextNode = false;\n      return out;\n    } else {\n      invariant(false, \"TODO\");\n    }\n  }\n\n  _renderValue(value: Value, namespace: string, depth: number): ReactNode {\n    if (value instanceof StringValue || value instanceof NumberValue) {\n      return this._renderText(value);\n    } else if (value instanceof ObjectValue && isReactElement(value)) {\n      return this._renderReactElement(value, namespace, depth);\n    } else if (value instanceof AbstractValue) {\n      return this._renderAbstractValue(value, namespace, depth);\n    } else if (value instanceof ArrayValue) {\n      return this._renderArrayValue(value, namespace, depth);\n    } else if (value instanceof BooleanValue || value instanceof UndefinedValue || value instanceof NullValue) {\n      return \"\";\n    }\n    invariant(false, \"TODO\");\n  }\n}\n\nfunction handleNestedOptimizedFunctions(realm: Realm, reconciler: Reconciler, staticMarkup: boolean): void {\n  for (let { func, evaluatedNode, componentType, context } of reconciler.nestedOptimizedClosures) {\n    if (reconciler.hasEvaluatedNestedClosure(func)) {\n      continue;\n    }\n    if (func instanceof ECMAScriptSourceFunctionValue && reconciler.hasEvaluatedRootNode(func, evaluatedNode)) {\n      continue;\n    }\n    let closureEffects = reconciler.resolveNestedOptimizedClosure(func, [], componentType, context, evaluatedNode);\n\n    let closureEffectsRenderedToString = realm.evaluateForEffectsWithPriorEffects(\n      [closureEffects],\n      () => {\n        let serverRenderer = new ReactDOMServerRenderer(realm, staticMarkup);\n        invariant(closureEffects.result instanceof SimpleNormalCompletion);\n        return serverRenderer.render(closureEffects.result.value);\n      },\n      \"handleNestedOptimizedFunctions\"\n    );\n\n    realm.react.optimizedNestedClosuresToWrite.push({\n      effects: closureEffectsRenderedToString,\n      func,\n    });\n  }\n}\n\nexport function renderToString(\n  realm: Realm,\n  reactElement: ObjectValue,\n  staticMarkup: boolean\n): StringValue | AbstractValue {\n  let reactStatistics = new ReactStatistics();\n  let reconciler = new Reconciler(realm, { firstRenderOnly: true, isRoot: true }, reactStatistics);\n  let typeValue = getProperty(realm, reactElement, \"type\");\n  let propsValue = getProperty(realm, reactElement, \"props\");\n  let evaluatedRootNode = createReactEvaluatedNode(\"ROOT\", getComponentName(realm, typeValue));\n  invariant(typeValue instanceof ECMAScriptSourceFunctionValue);\n  if (propsValue instanceof AbstractValue && !(propsValue instanceof AbstractObjectValue)) {\n    propsValue = To.ToObject(realm, propsValue);\n  }\n  invariant(propsValue instanceof ObjectValue || propsValue instanceof AbstractObjectValue);\n  let effects = reconciler.resolveReactComponentTree(typeValue, propsValue, null, evaluatedRootNode);\n\n  invariant(realm.generator);\n  // create a single regex used for the escape functions\n  // by hoisting it, it gets cached by the VM JITs\n  realm.generator.emitStatement([], () =>\n    t.variableDeclaration(\"var\", [t.variableDeclarator(t.identifier(\"matchHtmlRegExp\"), t.regExpLiteral(\"[\\\"'&<>]\"))])\n  );\n  invariant(realm.generator);\n  realm.generator.emitStatement([], () =>\n    t.variableDeclaration(\"var\", [t.variableDeclarator(t.identifier(\"previousWasTextNode\"), t.booleanLiteral(false))])\n  );\n  invariant(effects);\n  realm.applyEffects(effects);\n  invariant(effects.result instanceof SimpleNormalCompletion);\n  let serverRenderer = new ReactDOMServerRenderer(realm, staticMarkup);\n  let renderValue = serverRenderer.render(effects.result.value);\n  handleNestedOptimizedFunctions(realm, reconciler, staticMarkup);\n  return renderValue;\n}\n"]}