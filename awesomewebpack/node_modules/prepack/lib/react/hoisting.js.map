{"version":3,"sources":["../../src/react/hoisting.js"],"names":["canHoistFunction","canHoistReactElement","determineIfReactElementCanBeHoisted","canHoistObject","realm","object","residualHeapVisitor","visitedValues","propName","properties","prop","canHoistValue","symbol","symbols","canHoistArray","array","intrinsicName","lengthValue","length","value","i","element","func","react","hoistableFunctions","has","get","undefined","functionInstance","functionInstances","residualFunctionBindings","Map","residualBindings","declarativeEnvironmentRecord","code","$ECMAScriptCode","functionInfos","unbound","size","set","canHoistAbstract","abstract","isPrimitive","intrinsics","null","add","canHoist","delete","reactElement","hoistableReactElements","type","ref","key","props","Set","String","isPartialObject"],"mappings":"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","file":"hoisting.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"../realm.js\";\nimport {\n  AbstractValue,\n  ArrayValue,\n  BooleanValue,\n  ECMAScriptSourceFunctionValue,\n  FunctionValue,\n  NumberValue,\n  ObjectValue,\n  SymbolValue,\n  StringValue,\n  Value,\n} from \"../values/index.js\";\nimport { Get } from \"../methods/index.js\";\nimport invariant from \"../invariant.js\";\nimport { isReactElement, getProperty } from \"./utils.js\";\nimport { ResidualHeapVisitor } from \"../serializer/ResidualHeapVisitor.js\";\n\n// a nested object of a React Element should be hoisted where all its properties are known\n// at evaluation time to be safe to hoist (because of the heuristics of a React render)\nfunction canHoistObject(\n  realm: Realm,\n  object: ObjectValue,\n  residualHeapVisitor: ResidualHeapVisitor,\n  visitedValues: Set<Value>\n): boolean {\n  if (isReactElement(object)) {\n    return canHoistReactElement(realm, object, residualHeapVisitor, visitedValues);\n  }\n  for (let [propName] of object.properties) {\n    let prop = Get(realm, object, propName);\n    if (!canHoistValue(realm, prop, residualHeapVisitor, visitedValues)) {\n      return false;\n    }\n  }\n  for (let [symbol] of object.symbols) {\n    let prop = Get(realm, object, symbol);\n    if (!canHoistValue(realm, prop, residualHeapVisitor, visitedValues)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction canHoistArray(\n  realm: Realm,\n  array: ArrayValue,\n  residualHeapVisitor: ResidualHeapVisitor,\n  visitedValues: Set<Value>\n): boolean {\n  if (array.intrinsicName) return false;\n  let lengthValue = Get(realm, array, \"length\");\n  invariant(lengthValue instanceof NumberValue);\n  let length = lengthValue.value;\n  for (let i = 0; i < length; i++) {\n    let element = Get(realm, array, \"\" + i);\n\n    if (!canHoistValue(realm, element, residualHeapVisitor, visitedValues)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function canHoistFunction(\n  realm: Realm,\n  func: FunctionValue,\n  residualHeapVisitor?: ResidualHeapVisitor,\n  visitedValues: Set<Value>\n): boolean {\n  if (realm.react.hoistableFunctions.has(func)) {\n    // cast because Flow thinks that we may have set a value to be something other than a boolean?\n    return ((realm.react.hoistableFunctions.get(func): any): boolean);\n  }\n  if (residualHeapVisitor === undefined) {\n    return false;\n  }\n  // get the function instance\n  let functionInstance = residualHeapVisitor.functionInstances.get(func);\n  // we can safely hoist the function if the residual bindings hoistable too\n  if (functionInstance !== undefined) {\n    invariant(functionInstance.residualFunctionBindings instanceof Map);\n    let residualBindings = functionInstance.residualFunctionBindings;\n    for (let [, { declarativeEnvironmentRecord, value }] of residualBindings) {\n      // if declarativeEnvironmentRecord is null, it's likely a global binding\n      // so we can assume that we can still hoist this function\n      if (declarativeEnvironmentRecord !== null) {\n        if (value === undefined) {\n          return false;\n        }\n        invariant(value instanceof Value);\n        if (!canHoistValue(realm, value, residualHeapVisitor, visitedValues)) {\n          return false;\n        }\n      }\n    }\n    if (func instanceof ECMAScriptSourceFunctionValue) {\n      let code = func.$ECMAScriptCode;\n      let functionInfos = residualHeapVisitor.functionInfos.get(code);\n      if (functionInfos && functionInfos.unbound.size > 0) {\n        return false;\n      }\n    }\n    realm.react.hoistableFunctions.set(func, true);\n    return true;\n  }\n  realm.react.hoistableFunctions.set(func, false);\n  return false;\n}\n\nfunction canHoistAbstract(realm: Realm, abstract: AbstractValue, residualHeapVisitor: ResidualHeapVisitor): boolean {\n  // TODO #1687: add abstract value hoisting\n  return false;\n}\n\nfunction isPrimitive(realm: Realm, value: Value) {\n  return (\n    value instanceof StringValue ||\n    value instanceof NumberValue ||\n    value instanceof SymbolValue ||\n    value instanceof BooleanValue ||\n    value === realm.intrinsics.null ||\n    value === realm.intrinsics.undefined\n  );\n}\n\nfunction canHoistValue(\n  realm: Realm,\n  value: Value,\n  residualHeapVisitor: ResidualHeapVisitor,\n  visitedValues: Set<Value>\n): boolean {\n  if (visitedValues.has(value)) {\n    // If there is a cycle, bail out.\n    // TODO: is there some way to *not* bail out in this case?\n    // Currently if we don't, the output is broken.\n    return false;\n  }\n  visitedValues.add(value);\n  let canHoist = false;\n\n  if (value instanceof ArrayValue) {\n    canHoist = canHoistArray(realm, value, residualHeapVisitor, visitedValues);\n  } else if (value instanceof FunctionValue) {\n    canHoist = canHoistFunction(realm, value, residualHeapVisitor, visitedValues);\n  } else if (value instanceof ObjectValue) {\n    canHoist = canHoistObject(realm, value, residualHeapVisitor, visitedValues);\n  } else if (value instanceof AbstractValue) {\n    canHoist = canHoistAbstract(realm, value, residualHeapVisitor);\n  } else if (isPrimitive) {\n    canHoist = true;\n  }\n  visitedValues.delete(value);\n  return canHoist;\n}\n\nexport function canHoistReactElement(\n  realm: Realm,\n  reactElement: ObjectValue,\n  residualHeapVisitor?: ResidualHeapVisitor,\n  visitedValues?: Set<Value> | void\n): boolean {\n  if (realm.react.hoistableReactElements.has(reactElement)) {\n    // cast because Flow thinks that we may have set a value to be something other than a boolean?\n    return ((realm.react.hoistableReactElements.get(reactElement): any): boolean);\n  }\n  if (residualHeapVisitor === undefined) {\n    return false;\n  }\n  let type = getProperty(realm, reactElement, \"type\");\n  let ref = getProperty(realm, reactElement, \"ref\");\n  let key = getProperty(realm, reactElement, \"key\");\n  let props = getProperty(realm, reactElement, \"props\");\n\n  if (visitedValues === undefined) {\n    visitedValues = new Set();\n    visitedValues.add(reactElement);\n  }\n  if (\n    canHoistValue(realm, type, residualHeapVisitor, visitedValues) &&\n    // we can't hoist string \"refs\" or if they're abstract, as they might be abstract strings\n    !(ref instanceof String || ref instanceof AbstractValue) &&\n    canHoistValue(realm, ref, residualHeapVisitor, visitedValues) &&\n    canHoistValue(realm, key, residualHeapVisitor, visitedValues) &&\n    !props.isPartialObject() &&\n    canHoistValue(realm, props, residualHeapVisitor, visitedValues)\n  ) {\n    realm.react.hoistableReactElements.set(reactElement, true);\n    return true;\n  }\n  realm.react.hoistableReactElements.set(reactElement, false);\n  return false;\n}\n\nexport function determineIfReactElementCanBeHoisted(\n  realm: Realm,\n  reactElement: ObjectValue,\n  residualHeapVisitor: ResidualHeapVisitor\n): void {\n  canHoistReactElement(realm, reactElement, residualHeapVisitor);\n}\n"]}