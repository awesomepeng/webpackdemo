{"version":3,"sources":["../../src/react/utils.js"],"names":["isReactElement","isReactPropsObject","getReactSymbol","isTagName","isReactComponent","valueIsClassComponent","valueIsKnownReactAbstraction","valueIsReactLibraryObject","valueIsLegacyCreateClassComponent","valueIsFactoryClassComponent","addKeyToReactElement","getUniqueReactElementKey","forEachArrayValue","mapArrayValue","convertSimpleClassComponentToFunctionalComponent","convertFunctionalComponentToComplexClassComponent","normalizeFunctionalComponentParamaters","createReactHintObject","getComponentTypeFromRootValue","flagPropsWithNoPartialKeyOrRef","hasNoPartialKeyOrRef","flattenChildren","evaluateWithNestedParentEffects","getProperty","createReactEvaluatedNode","getComponentName","convertConfigObjectToReactComponentTreeConfig","getValueFromFunctionCall","getLocationFromValue","createNoopFunction","doNotOptimizeComponent","createDefaultPropsHelper","createInternalReactElement","cloneProps","applyObjectAssignConfigsForReactElement","canExcludeReactElementObjectProperty","cloneReactElement","hardModifyReactObjectPropertyBinding","t","val","realm","$Realm","react","enabled","reactElements","has","properties","$$typeof","globalObject","$GlobalObject","globalSymbolValue","intrinsics","undefined","value","symbolFromRegistry","globalSymbolRegistry","find","e","$Symbol","_isReactElement","$Key","set","createdDuringReconcilation","firstRenderOnly","reactProps","symbolKey","reactSymbol","symbols","get","SymbolFor","Symbol","SymbolForDescriptor","descriptor","SymbolForValue","$Call","ast","type","test","name","length","toUpperCase","prototype","ToBooleanPartial","abstractHints","logger","fbLibraries","reactVersion","tryQuery","reactCreateElement","reactCloneElement","reactIsValidElement","reactComponent","reactChildren","isIntrinsicAndHasWidenedNumericProperty","reactElement","typeValue","refValue","propsValue","currentKeyValue","null","uniqueKey","usedReactElementKeys","newKeyValue","index","key","Math","random","toString","replace","substring","add","array","mapFunc","lengthValue","i","elementProperty","elementPropertyDescriptor","elementValue","newArray","ArrayCreate","returnTheNewArray","newElement","CreateDataPropertyOrThrow","GetDescriptorForProperty","propertyName","object","complexComponentType","additionalFunctionEffects","configurable","DeletePropertyOrThrow","$FunctionKind","$Prototype","FunctionPrototype","$FormalParameters","identifier","transforms","push","body","funcNode","functionExpression","blockStatement","file","program","expressionStatement","path","node","isIdentifier","isThisExpression","parentPath","parentNode","isMemberExpression","replaceWith","property","clearCache","createBinding","cloneProperties","newProperties","Map","cloneSymbols","newSymbols","symbol","cloneValue","originalValue","_prototype","copyToObject","cloneFunction","newValue","intrinsicName","Object","assign","originalPrototype","$HomeObject","clonePrototype","Set","newPrototype","ObjectPrototype","skipFunctionProperties","functionalComponentType","userCodePropertiesToAdd","userCodeSymbolsToAdd","binding","unshift","variableDeclaration","variableDeclarator","memberExpression","thisExpression","func","lengthProperty","writable","enumerable","map","param","args","firstRenderValue","_valueIsKnownReactAbstraction","reactHint","reactRelay","Array","isArray","componentType","props","propsWithNoPartialKeyOrRef","isPartialObject","values","isTop","elements","getElements","element","wasSafe","recursivelyFlattenArray","targetArray","item","flattenedChildren","makeFinal","nestedEffects","f","nextEffects","slice","modifiedBindings","modifiedProperties","createdObjects","effects","shift","result","applyEffects","generator","pathConditions","undoBindings","restoreProperties","size","reportIntrospectionError","status","children","message","boundText","__originalName","config","isRoot","propValue","diagnostic","currentLocation","handleError","funcThis","isConstructor","funcCall","newCall","$Construct","completion","error","composeWithSavedCompletion","isEventProp","toLowerCase","expressionLocation","start","line","column","end","noopFunction","noOpFunc","uniqueOrderedTag","functionBodyUniqueTagSeed","$ECMAScriptCode","doNotOptimize","defaultPropsHelper","escapeHelperAst","plugins","helper","params","ref","obj","ObjectCreate","kind","activeReconciler","componentTreeConfig","mightBeFinalObject","applyClonedTemporalAlias","clonedProps","temporalAlias","temporalBuildNodeEntry","getTemporalBuildNodeEntryFromDerivedValue","temporalArgs","to","sources","arg","createTemporalObjectAssign","newChildren","propName","makePartial","isSimpleObject","makeSimple","globalObj","objAssign","objectAssignCall","reactElementData","isHostComponent","shouldCloneProps","keyValue","mightNotBeFinalObject","newDescriptor","newBinding"],"mappings":"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","file":"utils.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm, Effects } from \"../realm.js\";\nimport { AbruptCompletion, PossiblyNormalCompletion, SimpleNormalCompletion } from \"../completions.js\";\nimport type { BabelNode, BabelNodeJSXIdentifier } from \"babel-types\";\nimport { parseExpression } from \"babylon\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  ArrayValue,\n  BooleanValue,\n  BoundFunctionValue,\n  ECMAScriptFunctionValue,\n  ECMAScriptSourceFunctionValue,\n  FunctionValue,\n  NumberValue,\n  ObjectValue,\n  StringValue,\n  SymbolValue,\n  UndefinedValue,\n  Value,\n} from \"../values/index.js\";\nimport { Generator, TemporalObjectAssignEntry } from \"../utils/generator.js\";\nimport type {\n  Descriptor,\n  FunctionBodyAstNode,\n  ReactComponentTreeConfig,\n  ReactHint,\n  PropertyBinding,\n} from \"../types.js\";\nimport { Get, cloneDescriptor } from \"../methods/index.js\";\nimport { computeBinary } from \"../evaluators/BinaryExpression.js\";\nimport type { AdditionalFunctionEffects, ReactEvaluatedNode } from \"../serializer/types.js\";\nimport invariant from \"../invariant.js\";\nimport { Create, Properties, To } from \"../singletons.js\";\nimport traverse from \"babel-traverse\";\nimport * as t from \"babel-types\";\nimport type { BabelNodeStatement } from \"babel-types\";\nimport { CompilerDiagnostic, FatalError } from \"../errors.js\";\n\nexport type ReactSymbolTypes =\n  | \"react.element\"\n  | \"react.context\"\n  | \"react.provider\"\n  | \"react.fragment\"\n  | \"react.portal\"\n  | \"react.return\"\n  | \"react.call\";\n\nexport function isReactElement(val: Value): boolean {\n  if (!(val instanceof ObjectValue)) {\n    return false;\n  }\n  let realm = val.$Realm;\n  if (!realm.react.enabled) {\n    return false;\n  }\n  if (realm.react.reactElements.has(val)) {\n    return true;\n  }\n  if (!val.properties.has(\"type\") || !val.properties.has(\"props\") || !val.properties.has(\"$$typeof\")) {\n    return false;\n  }\n  let $$typeof = getProperty(realm, val, \"$$typeof\");\n  let globalObject = realm.$GlobalObject;\n  let globalSymbolValue = getProperty(realm, globalObject, \"Symbol\");\n\n  if (globalSymbolValue === realm.intrinsics.undefined) {\n    if ($$typeof instanceof NumberValue) {\n      return $$typeof.value === 0xeac7;\n    }\n  } else if ($$typeof instanceof SymbolValue) {\n    let symbolFromRegistry = realm.globalSymbolRegistry.find(e => e.$Symbol === $$typeof);\n    let _isReactElement = symbolFromRegistry !== undefined && symbolFromRegistry.$Key === \"react.element\";\n    if (_isReactElement) {\n      // If we get there, it means the ReactElement was created in manual user-space\n      realm.react.reactElements.set(val, { createdDuringReconcilation: false, firstRenderOnly: false });\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isReactPropsObject(val: Value): boolean {\n  if (!(val instanceof ObjectValue)) {\n    return false;\n  }\n  let realm = val.$Realm;\n  if (!realm.react.enabled) {\n    return false;\n  }\n  if (realm.react.reactProps.has(val)) {\n    return true;\n  }\n  return false;\n}\n\nexport function getReactSymbol(symbolKey: ReactSymbolTypes, realm: Realm): SymbolValue {\n  let reactSymbol = realm.react.symbols.get(symbolKey);\n  if (reactSymbol !== undefined) {\n    return reactSymbol;\n  }\n  let SymbolFor = realm.intrinsics.Symbol.properties.get(\"for\");\n  if (SymbolFor !== undefined) {\n    let SymbolForDescriptor = SymbolFor.descriptor;\n\n    if (SymbolForDescriptor !== undefined) {\n      let SymbolForValue = SymbolForDescriptor.value;\n      if (SymbolForValue instanceof ObjectValue && typeof SymbolForValue.$Call === \"function\") {\n        reactSymbol = SymbolForValue.$Call(realm.intrinsics.Symbol, [new StringValue(realm, symbolKey)]);\n        invariant(reactSymbol instanceof SymbolValue);\n        realm.react.symbols.set(symbolKey, reactSymbol);\n      }\n    }\n  }\n  invariant(reactSymbol instanceof SymbolValue, `Symbol(\"${symbolKey}\") could not be found in realm`);\n  return reactSymbol;\n}\n\nexport function isTagName(ast: BabelNode): boolean {\n  return ast.type === \"JSXIdentifier\" && /^[a-z]|\\-/.test(((ast: any): BabelNodeJSXIdentifier).name);\n}\n\nexport function isReactComponent(name: string): boolean {\n  return name.length > 0 && name[0] === name[0].toUpperCase();\n}\n\nexport function valueIsClassComponent(realm: Realm, value: Value): boolean {\n  if (!(value instanceof FunctionValue)) {\n    return false;\n  }\n  let prototype = Get(realm, value, \"prototype\");\n\n  if (prototype instanceof ObjectValue) {\n    return To.ToBooleanPartial(realm, Get(realm, prototype, \"isReactComponent\"));\n  }\n  return false;\n}\n\nexport function valueIsKnownReactAbstraction(realm: Realm, value: Value): boolean {\n  return value instanceof AbstractObjectValue && realm.react.abstractHints.has(value);\n}\n\n// logger isn't typed otherwise it will increase flow cycle length :()\nexport function valueIsReactLibraryObject(realm: Realm, value: ObjectValue, logger: any): boolean {\n  if (realm.fbLibraries.react === value) {\n    return true;\n  }\n  // we check that the object is the React or React-like library by checking for\n  // core properties that should exist on it\n  let reactVersion = logger.tryQuery(() => Get(realm, value, \"version\"), undefined);\n  if (!(reactVersion instanceof StringValue)) {\n    return false;\n  }\n  let reactCreateElement = logger.tryQuery(() => Get(realm, value, \"createElement\"), undefined);\n  if (!(reactCreateElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactCloneElement = logger.tryQuery(() => Get(realm, value, \"cloneElement\"), undefined);\n  if (!(reactCloneElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactIsValidElement = logger.tryQuery(() => Get(realm, value, \"isValidElement\"), undefined);\n  if (!(reactIsValidElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactComponent = logger.tryQuery(() => Get(realm, value, \"Component\"), undefined);\n  if (!(reactComponent instanceof FunctionValue)) {\n    return false;\n  }\n  let reactChildren = logger.tryQuery(() => Get(realm, value, \"Children\"), undefined);\n  if (!(reactChildren instanceof ObjectValue)) {\n    return false;\n  }\n  return false;\n}\n\nexport function valueIsLegacyCreateClassComponent(realm: Realm, value: Value): boolean {\n  if (!(value instanceof FunctionValue)) {\n    return false;\n  }\n  let prototype = Get(realm, value, \"prototype\");\n\n  if (prototype instanceof ObjectValue) {\n    return prototype.properties.has(\"__reactAutoBindPairs\");\n  }\n  return false;\n}\n\nexport function valueIsFactoryClassComponent(realm: Realm, value: Value): boolean {\n  if (value instanceof ObjectValue && !ArrayValue.isIntrinsicAndHasWidenedNumericProperty(value)) {\n    return To.ToBooleanPartial(realm, Get(realm, value, \"render\"));\n  }\n  return false;\n}\n\nexport function addKeyToReactElement(realm: Realm, reactElement: ObjectValue): ObjectValue {\n  let typeValue = getProperty(realm, reactElement, \"type\");\n  let refValue = getProperty(realm, reactElement, \"ref\");\n  let propsValue = getProperty(realm, reactElement, \"props\");\n  // we need to apply a key when we're branched\n  let currentKeyValue = getProperty(realm, reactElement, \"key\") || realm.intrinsics.null;\n  let uniqueKey = getUniqueReactElementKey(\"\", realm.react.usedReactElementKeys);\n  let newKeyValue = new StringValue(realm, uniqueKey);\n  if (currentKeyValue !== realm.intrinsics.null) {\n    newKeyValue = computeBinary(realm, \"+\", currentKeyValue, newKeyValue);\n  }\n  invariant(propsValue instanceof ObjectValue);\n  return createInternalReactElement(realm, typeValue, newKeyValue, refValue, propsValue);\n}\n// we create a unique key for each JSXElement to prevent collisions\n// otherwise React will detect a missing/conflicting key at runtime and\n// this can break the reconcilation of JSXElements in arrays\nexport function getUniqueReactElementKey(index?: string, usedReactElementKeys: Set<string>): string {\n  let key;\n  do {\n    key = Math.random()\n      .toString(36)\n      .replace(/[^a-z]+/g, \"\")\n      .substring(0, 2);\n  } while (usedReactElementKeys.has(key));\n  usedReactElementKeys.add(key);\n  if (index !== undefined) {\n    return `${key}${index}`;\n  }\n  return key;\n}\n\n// a helper function to loop over ArrayValues\nexport function forEachArrayValue(\n  realm: Realm,\n  array: ArrayValue,\n  mapFunc: (element: Value, index: number) => void\n): void {\n  let lengthValue = Get(realm, array, \"length\");\n  invariant(lengthValue instanceof NumberValue, \"TODO: support non-numeric length on forEachArrayValue\");\n  let length = lengthValue.value;\n  for (let i = 0; i < length; i++) {\n    let elementProperty = array.properties.get(\"\" + i);\n    let elementPropertyDescriptor = elementProperty && elementProperty.descriptor;\n    if (elementPropertyDescriptor) {\n      let elementValue = elementPropertyDescriptor.value;\n      if (elementValue instanceof Value) {\n        mapFunc(elementValue, i);\n      }\n    }\n  }\n}\n\nexport function mapArrayValue(\n  realm: Realm,\n  array: ArrayValue,\n  mapFunc: (element: Value, descriptor: Descriptor) => Value\n): ArrayValue {\n  let lengthValue = Get(realm, array, \"length\");\n  invariant(lengthValue instanceof NumberValue, \"TODO: support non-numeric length on mapArrayValue\");\n  let length = lengthValue.value;\n  let newArray = Create.ArrayCreate(realm, length);\n  let returnTheNewArray = false;\n\n  for (let i = 0; i < length; i++) {\n    let elementProperty = array.properties.get(\"\" + i);\n    let elementPropertyDescriptor = elementProperty && elementProperty.descriptor;\n    if (elementPropertyDescriptor) {\n      let elementValue = elementPropertyDescriptor.value;\n      if (elementValue instanceof Value) {\n        let newElement = mapFunc(elementValue, elementPropertyDescriptor);\n        if (newElement !== elementValue) {\n          returnTheNewArray = true;\n        }\n        Create.CreateDataPropertyOrThrow(realm, newArray, \"\" + i, newElement);\n        continue;\n      }\n    }\n    Create.CreateDataPropertyOrThrow(realm, newArray, \"\" + i, realm.intrinsics.undefined);\n  }\n  return returnTheNewArray ? newArray : array;\n}\n\nfunction GetDescriptorForProperty(value: ObjectValue, propertyName: string): ?Descriptor {\n  let object = value.properties.get(propertyName);\n  invariant(object);\n  return object.descriptor;\n}\n\nexport function convertSimpleClassComponentToFunctionalComponent(\n  realm: Realm,\n  complexComponentType: ECMAScriptSourceFunctionValue,\n  additionalFunctionEffects: AdditionalFunctionEffects\n): void {\n  let prototype = complexComponentType.properties.get(\"prototype\");\n  invariant(prototype);\n  invariant(prototype.descriptor);\n  prototype.descriptor.configurable = true;\n  Properties.DeletePropertyOrThrow(realm, complexComponentType, \"prototype\");\n\n  // change the function kind\n  complexComponentType.$FunctionKind = \"normal\";\n  // set the prototype back to an object\n  complexComponentType.$Prototype = realm.intrinsics.FunctionPrototype;\n  // give the function the functional components params\n  complexComponentType.$FormalParameters = [t.identifier(\"props\"), t.identifier(\"context\")];\n  // add a transform to occur after the additional function has serialized the body of the class\n  additionalFunctionEffects.transforms.push((body: Array<BabelNodeStatement>) => {\n    // as this was a class before and is now a functional component, we need to replace\n    // this.props and this.context to props and context, via the function arugments\n    let funcNode = t.functionExpression(null, [], t.blockStatement(body));\n\n    traverse(\n      t.file(t.program([t.expressionStatement(funcNode)])),\n      {\n        \"Identifier|ThisExpression\"(path) {\n          let node = path.node;\n          if ((t.isIdentifier(node) && node.name === \"this\") || t.isThisExpression(node)) {\n            let parentPath = path.parentPath;\n            let parentNode = parentPath.node;\n\n            if (t.isMemberExpression(parentNode)) {\n              // remove the \"this\" from the member\n              parentPath.replaceWith(parentNode.property);\n            } else {\n              throw new FatalError(\n                `conversion of a simple class component to functional component failed due to \"this\" not being replaced`\n              );\n            }\n          }\n        },\n      },\n      undefined,\n      {},\n      undefined\n    );\n    traverse.clearCache();\n  });\n}\n\nfunction createBinding(descriptor: void | Descriptor, key: string | SymbolValue, object: ObjectValue) {\n  return {\n    descriptor,\n    key,\n    object,\n  };\n}\n\nfunction cloneProperties(realm: Realm, properties: Map<string, any>, object: ObjectValue): Map<string, any> {\n  let newProperties = new Map();\n  for (let [propertyName, { descriptor }] of properties) {\n    newProperties.set(propertyName, createBinding(cloneDescriptor(descriptor), propertyName, object));\n  }\n  return newProperties;\n}\n\nfunction cloneSymbols(realm: Realm, symbols: Map<SymbolValue, any>, object: ObjectValue): Map<SymbolValue, any> {\n  let newSymbols = new Map();\n  for (let [symbol, { descriptor }] of symbols) {\n    newSymbols.set(symbol, createBinding(cloneDescriptor(descriptor), symbol, object));\n  }\n  return newSymbols;\n}\n\nfunction cloneValue(\n  realm: Realm,\n  originalValue: Value,\n  _prototype: null | ObjectValue,\n  copyToObject?: ObjectValue\n): Value {\n  if (originalValue instanceof FunctionValue) {\n    return cloneFunction(realm, originalValue, _prototype, copyToObject);\n  }\n  invariant(false, \"TODO: add support to cloneValue() for more value types\");\n}\n\nfunction cloneFunction(\n  realm: Realm,\n  originalValue: Value,\n  _prototype: null | ObjectValue,\n  copyToObject?: ObjectValue\n): FunctionValue {\n  let newValue;\n  if (originalValue instanceof ECMAScriptSourceFunctionValue) {\n    newValue = copyToObject || new ECMAScriptSourceFunctionValue(realm, originalValue.intrinsicName);\n    invariant(newValue instanceof ECMAScriptSourceFunctionValue);\n    // $FlowFixMe: complains about Object.assign\n    Object.assign(newValue, originalValue);\n    let properties = cloneProperties(realm, originalValue.properties, newValue);\n    newValue.properties = properties;\n    let symbols = cloneSymbols(realm, originalValue.symbols, newValue);\n    newValue.symbols = symbols;\n\n    // handle home object + prototype\n    let originalPrototype = originalValue.$HomeObject;\n    invariant(originalPrototype instanceof ObjectValue);\n    let prototype = _prototype || clonePrototype(realm, originalPrototype);\n    newValue.$HomeObject = prototype;\n    if (originalPrototype.properties.has(\"constructor\")) {\n      Properties.Set(realm, prototype, \"constructor\", newValue, false);\n    }\n    if (originalValue.properties.has(\"prototype\")) {\n      Properties.Set(realm, newValue, \"prototype\", prototype, false);\n    }\n  }\n  invariant(newValue instanceof FunctionValue, \"TODO: add support to cloneValue() for more function types\");\n  return newValue;\n}\n\nfunction clonePrototype(realm: Realm, prototype: Value): ObjectValue {\n  invariant(prototype instanceof ObjectValue);\n  let newPrototype = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, prototype.intrinsicName);\n\n  Object.assign(newPrototype, prototype);\n  for (let [propertyName] of prototype.properties) {\n    if (propertyName !== \"constructor\") {\n      let originalValue = Get(realm, prototype, propertyName);\n      let newValue = cloneValue(realm, originalValue, prototype);\n      Properties.Set(realm, newPrototype, propertyName, newValue, false);\n    }\n  }\n  for (let [symbol] of prototype.symbols) {\n    let originalValue = Get(realm, prototype, symbol);\n    let newValue = cloneValue(realm, originalValue, prototype);\n    Properties.Set(realm, newPrototype, symbol, newValue, false);\n  }\n  return newPrototype;\n}\n\nconst skipFunctionProperties = new Set([\"length\", \"prototype\", \"arguments\", \"name\", \"caller\"]);\n\nexport function convertFunctionalComponentToComplexClassComponent(\n  realm: Realm,\n  functionalComponentType: ECMAScriptSourceFunctionValue,\n  complexComponentType: void | ECMAScriptSourceFunctionValue,\n  additionalFunctionEffects: AdditionalFunctionEffects\n): void {\n  invariant(complexComponentType instanceof ECMAScriptSourceFunctionValue);\n  // get all properties on the functional component that were added in user-code\n  // we add defaultProps as undefined, as merging a class component's defaultProps on to\n  // a differnet component isn't right, we can discard defaultProps instead via folding\n  // we also don't want propTypes from the class component, so we remove that too\n  let userCodePropertiesToAdd: Map<string, PropertyBinding> = new Map([\n    [\"defaultProps\", createBinding(undefined, \"defaultProps\", functionalComponentType)],\n    [\"propTypes\", createBinding(undefined, \"propTypes\", functionalComponentType)],\n  ]);\n  let userCodeSymbolsToAdd: Map<SymbolValue, PropertyBinding> = new Map();\n\n  for (let [propertyName, binding] of functionalComponentType.properties) {\n    if (!skipFunctionProperties.has(propertyName)) {\n      userCodePropertiesToAdd.set(propertyName, binding);\n    }\n  }\n  for (let [symbol, binding] of functionalComponentType.symbols) {\n    userCodeSymbolsToAdd.set(symbol, binding);\n  }\n\n  cloneValue(realm, complexComponentType, null, functionalComponentType);\n  // then copy back and properties that were on the original functional component\n  // ensuring we overwrite any existing ones\n  for (let [propertyName, binding] of userCodePropertiesToAdd) {\n    functionalComponentType.properties.set(propertyName, binding);\n  }\n  for (let [symbol, binding] of userCodeSymbolsToAdd) {\n    functionalComponentType.symbols.set(symbol, binding);\n  }\n  // add a transform to occur after the additional function has serialized the body of the class\n  additionalFunctionEffects.transforms.push((body: Array<BabelNodeStatement>) => {\n    // as we've converted a functional component to a complex one, we are going to have issues with\n    // \"props\" and \"context\" references, as they're now going to be \"this.props\" and \"this.context\".\n    // we simply need a to add to vars to beginning of the body to get around this\n    // if they're not used, any DCE tool post-Prepack (GCC or Uglify) will remove them\n    body.unshift(\n      t.variableDeclaration(\"var\", [\n        t.variableDeclarator(t.identifier(\"props\"), t.memberExpression(t.thisExpression(), t.identifier(\"props\"))),\n        t.variableDeclarator(t.identifier(\"context\"), t.memberExpression(t.thisExpression(), t.identifier(\"context\"))),\n      ])\n    );\n  });\n}\n\nexport function normalizeFunctionalComponentParamaters(func: ECMAScriptSourceFunctionValue): void {\n  // fix the length as we may change the arguments\n  let lengthProperty = GetDescriptorForProperty(func, \"length\");\n  invariant(lengthProperty);\n  lengthProperty.writable = false;\n  lengthProperty.enumerable = false;\n  lengthProperty.configurable = true;\n  func.$FormalParameters = func.$FormalParameters.map((param, i) => {\n    if (i === 0) {\n      return t.isIdentifier(param) ? param : t.identifier(\"props\");\n    } else {\n      return t.isIdentifier(param) ? param : t.identifier(\"context\");\n    }\n  });\n  if (func.$FormalParameters.length === 1) {\n    func.$FormalParameters.push(t.identifier(\"context\"));\n  }\n  // ensure the length value is set to the correct value after\n  // we've made mutations to the arguments of this function\n  let lengthValue = lengthProperty.value;\n  invariant(lengthValue instanceof NumberValue);\n  lengthValue.value = func.$FormalParameters.length;\n}\n\nexport function createReactHintObject(\n  object: ObjectValue,\n  propertyName: string,\n  args: Array<Value>,\n  firstRenderValue: Value\n): ReactHint {\n  return {\n    firstRenderValue,\n    object,\n    propertyName,\n    args,\n  };\n}\n\nexport function getComponentTypeFromRootValue(realm: Realm, value: Value): ECMAScriptSourceFunctionValue | null {\n  let _valueIsKnownReactAbstraction = valueIsKnownReactAbstraction(realm, value);\n  if (!(value instanceof ECMAScriptSourceFunctionValue || _valueIsKnownReactAbstraction)) {\n    return null;\n  }\n  if (_valueIsKnownReactAbstraction) {\n    invariant(value instanceof AbstractValue);\n    let reactHint = realm.react.abstractHints.get(value);\n\n    invariant(reactHint);\n    if (typeof reactHint !== \"string\" && reactHint.object === realm.fbLibraries.reactRelay) {\n      switch (reactHint.propertyName) {\n        case \"createFragmentContainer\":\n        case \"createPaginationContainer\":\n        case \"createRefetchContainer\":\n          invariant(Array.isArray(reactHint.args));\n          // componentType is the 1st argument of a ReactRelay container\n          let componentType = reactHint.args[0];\n          invariant(componentType instanceof ECMAScriptSourceFunctionValue);\n          return componentType;\n        default:\n          invariant(\n            false,\n            `unsupported known React abstraction - ReactRelay property \"${reactHint.propertyName}\" not supported`\n          );\n      }\n    }\n    if (reactHint.object === realm.fbLibraries.react && reactHint.propertyName === \"forwardRef\") {\n      return null;\n    }\n    invariant(false, \"unsupported known React abstraction\");\n  } else {\n    invariant(value instanceof ECMAScriptSourceFunctionValue);\n    return value;\n  }\n}\n\nexport function flagPropsWithNoPartialKeyOrRef(realm: Realm, props: ObjectValue | AbstractObjectValue): void {\n  realm.react.propsWithNoPartialKeyOrRef.add(props);\n}\n\nexport function hasNoPartialKeyOrRef(realm: Realm, props: ObjectValue | AbstractObjectValue): boolean {\n  if (realm.react.propsWithNoPartialKeyOrRef.has(props)) {\n    return true;\n  }\n  if (props instanceof ObjectValue && !props.isPartialObject()) {\n    return true;\n  }\n  if (props instanceof AbstractObjectValue) {\n    if (props.values.isTop()) {\n      return false;\n    }\n    let elements = props.values.getElements();\n    for (let element of elements) {\n      invariant(element instanceof ObjectValue);\n      let wasSafe = hasNoPartialKeyOrRef(realm, element);\n      if (!wasSafe) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (props instanceof ObjectValue && props.properties.has(\"key\") && props.properties.has(\"ref\")) {\n    return true;\n  }\n  return false;\n}\n\nfunction recursivelyFlattenArray(realm: Realm, array, targetArray): void {\n  forEachArrayValue(realm, array, item => {\n    if (item instanceof ArrayValue && !item.intrinsicName) {\n      recursivelyFlattenArray(realm, item, targetArray);\n    } else {\n      let lengthValue = Get(realm, targetArray, \"length\");\n      invariant(lengthValue instanceof NumberValue);\n      Properties.Set(realm, targetArray, \"\" + lengthValue.value, item, true);\n    }\n  });\n}\n\nexport function flattenChildren(realm: Realm, array: ArrayValue): ArrayValue {\n  let flattenedChildren = Create.ArrayCreate(realm, 0);\n  recursivelyFlattenArray(realm, array, flattenedChildren);\n  flattenedChildren.makeFinal();\n  return flattenedChildren;\n}\n\nexport function evaluateWithNestedParentEffects(\n  realm: Realm,\n  nestedEffects: Array<Effects>,\n  f: () => Effects\n): Effects {\n  let nextEffects = nestedEffects.slice();\n  let modifiedBindings;\n  let modifiedProperties;\n  let createdObjects;\n  let value;\n\n  if (nextEffects.length !== 0) {\n    let effects = nextEffects.shift();\n    value = effects.result;\n    createdObjects = effects.createdObjects;\n    modifiedBindings = effects.modifiedBindings;\n    modifiedProperties = effects.modifiedProperties;\n    realm.applyEffects(\n      new Effects(\n        value,\n        new Generator(realm, \"evaluateWithNestedEffects\", effects.generator.pathConditions),\n        modifiedBindings,\n        modifiedProperties,\n        createdObjects\n      )\n    );\n  }\n  try {\n    if (nextEffects.length === 0) {\n      return f();\n    } else {\n      return evaluateWithNestedParentEffects(realm, nextEffects, f);\n    }\n  } finally {\n    if (modifiedBindings && modifiedProperties) {\n      realm.undoBindings(modifiedBindings);\n      realm.restoreProperties(modifiedProperties);\n    }\n  }\n}\n\n// This function is mainly use to get internal properties\n// on objects that we know are safe to access internally\n// such as ReactElements. Getting properties here does\n// not emit change to modified bindings and is intended\n// for only internal usage – not for user-land code\nexport function getProperty(\n  realm: Realm,\n  object: ObjectValue | AbstractObjectValue,\n  property: string | SymbolValue\n): Value {\n  if (object instanceof AbstractObjectValue) {\n    if (object.values.isTop()) {\n      return realm.intrinsics.undefined;\n    }\n    let elements = object.values.getElements();\n    invariant(elements.size === 1, \"TODO: deal with multiple elements\");\n    for (let element of elements) {\n      invariant(element instanceof ObjectValue, \"TODO: deal with object set templates\");\n      object = element;\n    }\n    invariant(object instanceof ObjectValue);\n  }\n  let binding;\n  if (typeof property === \"string\") {\n    binding = object.properties.get(property);\n  } else {\n    binding = object.symbols.get(property);\n  }\n  if (!binding) {\n    return realm.intrinsics.undefined;\n  }\n  let descriptor = binding.descriptor;\n\n  if (!descriptor) {\n    return realm.intrinsics.undefined;\n  }\n  let value = descriptor.value;\n  if (value === undefined) {\n    AbstractValue.reportIntrospectionError(object, `react/utils/getProperty unsupported getter/setter property`);\n    throw new FatalError();\n  }\n  invariant(value instanceof Value, `react/utils/getProperty should not be called on internal properties`);\n  return value;\n}\n\nexport function createReactEvaluatedNode(\n  status:\n    | \"ROOT\"\n    | \"NEW_TREE\"\n    | \"INLINED\"\n    | \"BAIL-OUT\"\n    | \"FATAL\"\n    | \"UNKNOWN_TYPE\"\n    | \"RENDER_PROPS\"\n    | \"FORWARD_REF\"\n    | \"NORMAL\",\n  name: string\n): ReactEvaluatedNode {\n  return {\n    children: [],\n    message: \"\",\n    name,\n    status,\n  };\n}\n\nexport function getComponentName(realm: Realm, componentType: Value): string {\n  if (componentType instanceof SymbolValue && componentType === getReactSymbol(\"react.fragment\", realm)) {\n    return \"React.Fragment\";\n  } else if (componentType instanceof SymbolValue) {\n    return \"unknown symbol\";\n  }\n  // $FlowFixMe: this code is fine, Flow thinks that coponentType is bound to string...\n  if (isReactComponent(componentType)) {\n    return \"ReactElement\";\n  }\n  if (componentType === realm.intrinsics.undefined || componentType === realm.intrinsics.null) {\n    return \"no name\";\n  }\n  invariant(\n    componentType instanceof ECMAScriptSourceFunctionValue ||\n      componentType instanceof BoundFunctionValue ||\n      componentType instanceof AbstractObjectValue ||\n      componentType instanceof AbstractValue ||\n      componentType instanceof ObjectValue\n  );\n  let boundText = componentType instanceof BoundFunctionValue ? \"bound \" : \"\";\n\n  if (componentType.__originalName) {\n    return boundText + componentType.__originalName;\n  }\n  if (realm.fbLibraries.reactRelay !== undefined) {\n    if (componentType === Get(realm, realm.fbLibraries.reactRelay, \"QueryRenderer\")) {\n      return boundText + \"QueryRenderer\";\n    }\n  }\n  if (componentType instanceof ECMAScriptSourceFunctionValue && componentType.$Prototype !== undefined) {\n    let name = Get(realm, componentType, \"name\");\n\n    if (name instanceof StringValue) {\n      return boundText + name.value;\n    }\n  }\n  if (realm.react.abstractHints.has(componentType)) {\n    let reactHint = realm.react.abstractHints.get(componentType);\n\n    invariant(reactHint !== undefined);\n    if (reactHint.object === realm.fbLibraries.react && reactHint.propertyName === \"forwardRef\") {\n      return \"forwarded ref\";\n    }\n  }\n  if (componentType instanceof FunctionValue) {\n    return boundText + \"anonymous\";\n  }\n  return \"unknown\";\n}\n\nexport function convertConfigObjectToReactComponentTreeConfig(\n  realm: Realm,\n  config: ObjectValue | UndefinedValue\n): ReactComponentTreeConfig {\n  // defaults\n  let firstRenderOnly = false;\n  let isRoot = false;\n\n  if (!(config instanceof UndefinedValue)) {\n    for (let [key] of config.properties) {\n      let propValue = getProperty(realm, config, key);\n      if (propValue instanceof StringValue || propValue instanceof NumberValue || propValue instanceof BooleanValue) {\n        let value = propValue.value;\n\n        // boolean options\n        if (typeof value === \"boolean\") {\n          if (key === \"firstRenderOnly\") {\n            firstRenderOnly = value;\n          } else if (key === \"isRoot\") {\n            isRoot = value;\n          }\n        }\n      } else {\n        let diagnostic = new CompilerDiagnostic(\n          \"__optimizeReactComponentTree(rootComponent, config) has been called with invalid arguments\",\n          realm.currentLocation,\n          \"PP0024\",\n          \"FatalError\"\n        );\n        realm.handleError(diagnostic);\n        if (realm.handleError(diagnostic) === \"Fail\") throw new FatalError();\n      }\n    }\n  }\n  return {\n    firstRenderOnly,\n    isRoot,\n  };\n}\n\nexport function getValueFromFunctionCall(\n  realm: Realm,\n  func: ECMAScriptSourceFunctionValue | BoundFunctionValue,\n  funcThis: ObjectValue | AbstractObjectValue | UndefinedValue,\n  args: Array<Value>,\n  isConstructor?: boolean = false\n): Value {\n  invariant(func.$Call, \"Expected function to be a FunctionValue with $Call method\");\n  let funcCall = func.$Call;\n  let newCall = func.$Construct;\n  let completion;\n  try {\n    if (isConstructor) {\n      invariant(newCall);\n      completion = newCall(args, func);\n    } else {\n      completion = funcCall(funcThis, args);\n    }\n  } catch (error) {\n    if (error instanceof AbruptCompletion) {\n      completion = error;\n    } else {\n      throw error;\n    }\n  }\n  if (completion instanceof PossiblyNormalCompletion) {\n    // in this case one of the branches may complete abruptly, which means that\n    // not all control flow branches join into one flow at this point.\n    // Consequently we have to continue tracking changes until the point where\n    // all the branches come together into one.\n    completion = realm.composeWithSavedCompletion(completion);\n  }\n  // return or throw completion\n  if (completion instanceof AbruptCompletion) throw completion;\n  if (completion instanceof SimpleNormalCompletion) completion = completion.value;\n  invariant(completion instanceof Value);\n  return completion;\n}\n\nfunction isEventProp(name: string): boolean {\n  return name.length > 2 && name[0].toLowerCase() === \"o\" && name[1].toLowerCase() === \"n\";\n}\n\nexport function getLocationFromValue(expressionLocation: any): string {\n  // if we can't get a value, then it's likely that the source file was not given\n  // (this happens in React tests) so instead don't print any location\n  return expressionLocation\n    ? ` at location: ${expressionLocation.start.line}:${expressionLocation.start.column} ` +\n        `- ${expressionLocation.end.line}:${expressionLocation.end.line}`\n    : \"\";\n}\n\nexport function createNoopFunction(realm: Realm): ECMAScriptSourceFunctionValue {\n  if (realm.react.noopFunction !== undefined) {\n    return realm.react.noopFunction;\n  }\n  let noOpFunc = new ECMAScriptSourceFunctionValue(realm);\n  let body = t.blockStatement([]);\n  ((body: any): FunctionBodyAstNode).uniqueOrderedTag = realm.functionBodyUniqueTagSeed++;\n  noOpFunc.$FormalParameters = [];\n  noOpFunc.$ECMAScriptCode = body;\n  realm.react.noopFunction = noOpFunc;\n  return noOpFunc;\n}\n\nexport function doNotOptimizeComponent(realm: Realm, componentType: Value): boolean {\n  if (componentType instanceof ObjectValue) {\n    let doNotOptimize = Get(realm, componentType, \"__reactCompilerDoNotOptimize\");\n\n    if (doNotOptimize instanceof BooleanValue) {\n      return doNotOptimize.value;\n    }\n  }\n  return false;\n}\n\nexport function createDefaultPropsHelper(realm: Realm): ECMAScriptSourceFunctionValue {\n  let defaultPropsHelper = `\n    function defaultPropsHelper(props, defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n      return props;\n    }\n  `;\n\n  let escapeHelperAst = parseExpression(defaultPropsHelper, { plugins: [\"flow\"] });\n  let helper = new ECMAScriptSourceFunctionValue(realm);\n  let body = escapeHelperAst.body;\n  ((body: any): FunctionBodyAstNode).uniqueOrderedTag = realm.functionBodyUniqueTagSeed++;\n  helper.$ECMAScriptCode = body;\n  helper.$FormalParameters = escapeHelperAst.params;\n  return helper;\n}\n\nexport function createInternalReactElement(\n  realm: Realm,\n  type: Value,\n  key: Value,\n  ref: Value,\n  props: ObjectValue\n): ObjectValue {\n  let obj = Create.ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n\n  // Sanity check the type is not conditional\n  if (type instanceof AbstractValue && type.kind === \"conditional\") {\n    invariant(false, \"createInternalReactElement should never encounter a conditional type\");\n  }\n\n  Create.CreateDataPropertyOrThrow(realm, obj, \"$$typeof\", getReactSymbol(\"react.element\", realm));\n  Create.CreateDataPropertyOrThrow(realm, obj, \"type\", type);\n  Create.CreateDataPropertyOrThrow(realm, obj, \"key\", key);\n  Create.CreateDataPropertyOrThrow(realm, obj, \"ref\", ref);\n  Create.CreateDataPropertyOrThrow(realm, obj, \"props\", props);\n  Create.CreateDataPropertyOrThrow(realm, obj, \"_owner\", realm.intrinsics.null);\n  obj.makeFinal();\n  // If we're in \"rendering\" a React component tree, we should have an active reconciler\n  let activeReconciler = realm.react.activeReconciler;\n  let createdDuringReconcilation = activeReconciler !== undefined;\n  let firstRenderOnly = createdDuringReconcilation ? activeReconciler.componentTreeConfig.firstRenderOnly : false;\n\n  realm.react.reactElements.set(obj, { createdDuringReconcilation, firstRenderOnly });\n  // Sanity check to ensure no bugs have crept in\n  invariant(\n    realm.react.reactProps.has(props) && props.mightBeFinalObject(),\n    \"React props object is not correctly setup\"\n  );\n  return obj;\n}\n\nfunction applyClonedTemporalAlias(realm: Realm, props: ObjectValue, clonedProps: ObjectValue): void {\n  let temporalAlias = props.temporalAlias;\n  invariant(temporalAlias !== undefined);\n  if (temporalAlias.kind === \"conditional\") {\n    // Leave in for now, we should deal with this later, but there might\n    // be a better option.\n    invariant(false, \"TODO applyClonedTemporalAlias conditional\");\n  }\n  let temporalBuildNodeEntry = realm.getTemporalBuildNodeEntryFromDerivedValue(temporalAlias);\n  if (!(temporalBuildNodeEntry instanceof TemporalObjectAssignEntry)) {\n    invariant(false, \"TODO nont TemporalObjectAssignEntry\");\n  }\n  invariant(temporalBuildNodeEntry !== undefined);\n  let temporalArgs = temporalBuildNodeEntry.args;\n  // replace the original props with the cloned one\n  let [to, ...sources] = temporalArgs.map(arg => (arg === props ? clonedProps : arg));\n\n  invariant(to instanceof ObjectValue || to instanceof AbstractObjectValue);\n  AbstractValue.createTemporalObjectAssign(realm, to, sources);\n}\n\nexport function cloneProps(realm: Realm, props: ObjectValue, newChildren?: Value): ObjectValue {\n  let clonedProps = new ObjectValue(realm, realm.intrinsics.ObjectPrototype);\n\n  for (let [propName, binding] of props.properties) {\n    if (binding && binding.descriptor && binding.descriptor.enumerable) {\n      if (newChildren !== undefined && propName === \"children\") {\n        Properties.Set(realm, clonedProps, propName, newChildren, true);\n      } else {\n        Properties.Set(realm, clonedProps, propName, getProperty(realm, props, propName), true);\n      }\n    }\n  }\n\n  if (props.isPartialObject()) {\n    clonedProps.makePartial();\n  }\n  if (props.isSimpleObject()) {\n    clonedProps.makeSimple();\n  }\n  if (realm.react.propsWithNoPartialKeyOrRef.has(props)) {\n    flagPropsWithNoPartialKeyOrRef(realm, clonedProps);\n  }\n  if (props.temporalAlias !== undefined) {\n    applyClonedTemporalAlias(realm, props, clonedProps);\n  }\n  clonedProps.makeFinal();\n  realm.react.reactProps.add(clonedProps);\n  return clonedProps;\n}\n\nexport function applyObjectAssignConfigsForReactElement(realm: Realm, to: ObjectValue, sources: Array<Value>): void {\n  // Get the global Object.assign\n  let globalObj = Get(realm, realm.$GlobalObject, \"Object\");\n  invariant(globalObj instanceof ObjectValue);\n  let objAssign = Get(realm, globalObj, \"assign\");\n  invariant(objAssign instanceof ECMAScriptFunctionValue);\n  let objectAssignCall = objAssign.$Call;\n  invariant(objectAssignCall !== undefined);\n\n  // Use the existing internal Prepack Object.assign model\n  objectAssignCall(realm.intrinsics.undefined, [to, ...sources]);\n}\n\n// In firstRenderOnly mode, we strip off onEventHanlders and any props\n// that are functions as they are not required for init render.\nexport function canExcludeReactElementObjectProperty(\n  realm: Realm,\n  reactElement: ObjectValue,\n  name: string,\n  value: Value\n): boolean {\n  let reactElementData = realm.react.reactElements.get(reactElement);\n  invariant(reactElementData !== undefined);\n  let { firstRenderOnly } = reactElementData;\n  let isHostComponent = getProperty(realm, reactElement, \"type\") instanceof StringValue;\n  return firstRenderOnly && isHostComponent && (isEventProp(name) || value instanceof FunctionValue);\n}\n\nexport function cloneReactElement(realm: Realm, reactElement: ObjectValue, shouldCloneProps: boolean): ObjectValue {\n  let typeValue = getProperty(realm, reactElement, \"type\");\n  let keyValue = getProperty(realm, reactElement, \"key\");\n  let refValue = getProperty(realm, reactElement, \"ref\");\n  let propsValue = getProperty(realm, reactElement, \"props\");\n\n  invariant(propsValue instanceof ObjectValue);\n  if (shouldCloneProps) {\n    propsValue = cloneProps(realm, propsValue);\n  }\n  return createInternalReactElement(realm, typeValue, keyValue, refValue, propsValue);\n}\n\n// This function changes an object's property value by changing it's binding\n// and descriptor, thus bypassing the binding detection system. This is a\n// dangerous function and should only be used on objects created by React.\n// It's primary use is to update ReactElement / React props properties\n// during the visitor equivalence stage as an optimization feature.\n// It will invariant if used on objects that are not final.\nexport function hardModifyReactObjectPropertyBinding(\n  realm: Realm,\n  object: ObjectValue,\n  propName: string,\n  value: Value\n): void {\n  invariant(\n    object.mightBeFinalObject() && !object.mightNotBeFinalObject(),\n    \"hardModifyReactObjectPropertyBinding can only be used on final objects!\"\n  );\n  let binding = object.properties.get(propName);\n  if (binding === undefined) {\n    binding = {\n      object,\n      descriptor: {\n        configurable: true,\n        enumerable: true,\n        value: undefined,\n        writable: true,\n      },\n      key: propName,\n    };\n  }\n  let descriptor = binding.descriptor;\n  invariant(descriptor !== undefined);\n  let newDescriptor = Object.assign({}, descriptor, {\n    value,\n  });\n  let newBinding = Object.assign({}, binding, {\n    descriptor: newDescriptor,\n  });\n  object.properties.set(propName, newBinding);\n}\n"]}