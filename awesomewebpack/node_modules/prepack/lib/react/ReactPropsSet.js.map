{"version":3,"sources":["../../src/react/ReactPropsSet.js"],"names":["ReactPropsSet","constructor","realm","reactEquivalenceSet","add","props","visitedValues","Set","currentMap","reactPropsRoot","result","propName","properties","getKey","prop","getEquivalentPropertyValue","getValue","map","temporalAlias","undefined","getTemporalAliasValue","react","emptyObject","value"],"mappings":";;;;;;;AAWA;;AACA;;AACA;;;;AACA;;;;AAdA;;;;;;;;;AAgBO,MAAMA,aAAN,CAAoB;AACzBC,cAAYC,KAAZ,EAA0BC,mBAA1B,EAAoE;AAClE,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACD;;;AAIDC,MAAIC,KAAJ,EAAwBC,aAAxB,EAAuE;AACrE,QAAI,CAACA,aAAL,EAAoBA,gBAAgB,IAAIC,GAAJ,EAAhB;AACpB,QAAIJ,sBAAsB,KAAKA,mBAA/B;AACA,QAAIK,aAAaL,oBAAoBM,cAArC;AACA,QAAIC,MAAJ;;AAEA,SAAK,IAAI,CAACC,QAAD,CAAT,IAAuBN,MAAMO,UAA7B,EAAyC;AACvCJ,mBAAaL,oBAAoBU,MAApB,CAA2BF,QAA3B,EAAqCH,UAArC,EAAiDF,aAAjD,CAAb;AACA,UAAIQ,OAAOX,oBAAoBY,0BAApB,CAA+CV,KAA/C,EAAsDM,QAAtD,CAAX;AACAD,eAASP,oBAAoBa,QAApB,CAA6BF,IAA7B,EAAmCN,UAAnC,EAA+CF,aAA/C,CAAT;AACAE,mBAAaE,OAAOO,GAApB;AACD;AACD,QAAIC,gBAAgBb,MAAMa,aAA1B;;AAEA,QAAIA,kBAAkBC,SAAtB,EAAiC;AAC/BX,mBAAaL,oBAAoBU,MAApB,2CAAgDL,UAAhD,EAA4DF,aAA5D,CAAb;AACAI,eAASP,oBAAoBiB,qBAApB,CAA0CF,aAA1C,EAAyDV,UAAzD,EAAqEF,aAArE,CAAT;AACAE,mBAAaE,OAAOO,GAApB;AACD;;AAED,QAAIP,WAAWS,SAAf,EAA0B;AACxB;AACA,UAAID,kBAAkBC,SAAlB,IAA+B,KAAKjB,KAAL,CAAWmB,KAAX,CAAiBC,WAAjB,KAAiCH,SAApE,EAA+E;AAC7E,eAAO,KAAKjB,KAAL,CAAWmB,KAAX,CAAiBC,WAAxB;AACD;AACD,aAAOjB,KAAP;AACD;AACD,QAAIK,OAAOa,KAAP,KAAiB,IAArB,EAA2B;AACzBb,aAAOa,KAAP,GAAelB,KAAf;AACD;AACD,6BAAUK,OAAOa,KAAP,8BAAV;AACA,WAAOb,OAAOa,KAAd;AACD;AAxCwB;QAAdvB,a,GAAAA,a","file":"ReactPropsSet.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"../realm.js\";\nimport { ObjectValue, Value } from \"../values/index.js\";\nimport invariant from \"../invariant.js\";\nimport { ReactEquivalenceSet, temporalAliasSymbol } from \"./ReactEquivalenceSet.js\";\n\nexport class ReactPropsSet {\n  constructor(realm: Realm, reactEquivalenceSet: ReactEquivalenceSet) {\n    this.realm = realm;\n    this.reactEquivalenceSet = reactEquivalenceSet;\n  }\n  realm: Realm;\n  reactEquivalenceSet: ReactEquivalenceSet;\n\n  add(props: ObjectValue, visitedValues: Set<Value> | void): ObjectValue {\n    if (!visitedValues) visitedValues = new Set();\n    let reactEquivalenceSet = this.reactEquivalenceSet;\n    let currentMap = reactEquivalenceSet.reactPropsRoot;\n    let result;\n\n    for (let [propName] of props.properties) {\n      currentMap = reactEquivalenceSet.getKey(propName, currentMap, visitedValues);\n      let prop = reactEquivalenceSet.getEquivalentPropertyValue(props, propName);\n      result = reactEquivalenceSet.getValue(prop, currentMap, visitedValues);\n      currentMap = result.map;\n    }\n    let temporalAlias = props.temporalAlias;\n\n    if (temporalAlias !== undefined) {\n      currentMap = reactEquivalenceSet.getKey(temporalAliasSymbol, currentMap, visitedValues);\n      result = reactEquivalenceSet.getTemporalAliasValue(temporalAlias, currentMap, visitedValues);\n      currentMap = result.map;\n    }\n\n    if (result === undefined) {\n      // If we have a temporalAlias, we can never return an empty object\n      if (temporalAlias === undefined && this.realm.react.emptyObject !== undefined) {\n        return this.realm.react.emptyObject;\n      }\n      return props;\n    }\n    if (result.value === null) {\n      result.value = props;\n    }\n    invariant(result.value instanceof ObjectValue);\n    return result.value;\n  }\n}\n"]}