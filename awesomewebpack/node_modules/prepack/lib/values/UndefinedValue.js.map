{"version":3,"sources":["../../src/values/UndefinedValue.js"],"names":["UndefinedValue","_serialize","undefined","equals","x","getHash","mightBeFalse","toDisplayString"],"mappings":";;;;;;AAWA;;AAEe,MAAMA,cAAN,+BAA4C;AACzDC,eAAa;AACX,WAAOC,SAAP;AACD;;AAEDC,SAAOC,CAAP,EAA0B;AACxB,WAAOA,aAAaJ,cAAb,IAA+B,EAAEI,8BAAF,CAAtC;AACD;;AAEDC,YAAkB;AAChB,WAAO,eAAP;AACD;;AAEDC,iBAAwB;AACtB,WAAO,IAAP;AACD;;AAEDC,oBAA0B;AACxB,WAAO,WAAP;AACD;AAnBwD;kBAAtCP,c,EAbrB;;;;;;;;;AASA","file":"UndefinedValue.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport { EmptyValue, PrimitiveValue, Value } from \"./index.js\";\n\nexport default class UndefinedValue extends PrimitiveValue {\n  _serialize() {\n    return undefined;\n  }\n\n  equals(x: Value): boolean {\n    return x instanceof UndefinedValue && !(x instanceof EmptyValue);\n  }\n\n  getHash(): number {\n    return 792057514635681;\n  }\n\n  mightBeFalse(): boolean {\n    return true;\n  }\n\n  toDisplayString(): string {\n    return \"undefined\";\n  }\n}\n"]}