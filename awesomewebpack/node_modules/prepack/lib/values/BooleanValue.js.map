{"version":3,"sources":["../../src/values/BooleanValue.js"],"names":["BooleanValue","constructor","realm","value","intrinsicName","intrinsics","true","false","equals","x","getHash","mightBeFalse","throwIfNotConcreteBoolean","_serialize","toDisplayString","toString"],"mappings":";;;;;;AAWA;;AAGe,MAAMA,YAAN,+BAA0C;AACvDC,cAAYC,KAAZ,EAA0BC,KAA1B,EAA0CC,aAA1C,EAAkE;AAChE,UAAMF,KAAN,EAAaE,aAAb;AACA,SAAKD,KAAL,GAAaA,KAAb;;AAEA,QAAIA,SAASD,MAAMG,UAAN,CAAiBC,IAA9B,EAAoC,OAAOJ,MAAMG,UAAN,CAAiBC,IAAxB;AACpC,QAAI,CAACH,KAAD,IAAUD,MAAMG,UAAN,CAAiBE,KAA/B,EAAsC,OAAOL,MAAMG,UAAN,CAAiBE,KAAxB;AACvC;;AAIDC,SAAOC,CAAP,EAA0B;AACxB,WAAOA,aAAaT,YAAb,IAA6B,KAAKG,KAAL,KAAeM,EAAEN,KAArD;AACD;;AAEDO,YAAkB;AAChB,WAAO,KAAKP,KAAL,GAAa,iBAAb,GAAiC,gBAAxC;AACD;;AAEDQ,iBAAwB;AACtB,WAAO,CAAC,KAAKR,KAAb;AACD;;AAEDS,8BAA0C;AACxC,WAAO,IAAP;AACD;;AAEDC,eAAsB;AACpB,WAAO,KAAKV,KAAZ;AACD;;AAEDW,oBAA0B;AACxB,WAAO,KAAKX,KAAL,CAAWY,QAAX,EAAP;AACD;AAjCsD;kBAApCf,Y,EAdrB;;;;;;;;;AASA","file":"BooleanValue.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport { PrimitiveValue, Value } from \"./index.js\";\nimport type { Realm } from \"../realm.js\";\n\nexport default class BooleanValue extends PrimitiveValue {\n  constructor(realm: Realm, value: boolean, intrinsicName?: string) {\n    super(realm, intrinsicName);\n    this.value = value;\n\n    if (value && realm.intrinsics.true) return realm.intrinsics.true;\n    if (!value && realm.intrinsics.false) return realm.intrinsics.false;\n  }\n\n  value: boolean;\n\n  equals(x: Value): boolean {\n    return x instanceof BooleanValue && this.value === x.value;\n  }\n\n  getHash(): number {\n    return this.value ? 12484058682847432 : 3777063795205331;\n  }\n\n  mightBeFalse(): boolean {\n    return !this.value;\n  }\n\n  throwIfNotConcreteBoolean(): BooleanValue {\n    return this;\n  }\n\n  _serialize(): boolean {\n    return this.value;\n  }\n\n  toDisplayString(): string {\n    return this.value.toString();\n  }\n}\n"]}